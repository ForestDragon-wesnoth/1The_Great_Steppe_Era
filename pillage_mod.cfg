#textdomain wesnoth-gse

#define STEPPE_DESTROYVILLAGE ARSONVAR TERRAIN
    [store_locations]
        x,y=$x1,$y1
        variable=tmp_steppe_village_location
    [/store_locations]
    [set_variables]
        name=destroyed_village_information
        mode=append
        [value]
            x=${ARSONVAR}.x
            y=${ARSONVAR}.y
            terrain=$tmp_steppe_village_location.terrain
        [/value]
    [/set_variables]
    {CLEAR_VARIABLE tmp_steppe_village_location}
[terrain]
terrain={TERRAIN}
x,y=${ARSONVAR}.x,${ARSONVAR}.y
layer=overlay
[/terrain]
    [if]
    [have_unit]
        id=${ARSONVAR}.id
        ability=steppe_arsontype_trample
    [/have_unit]
    [then]
    [item]
        x=${ARSONVAR}.x
        y=${ARSONVAR}.y
        name=steppe_rubble
        image=scenery/rubble.png
    [/item]
    [/then]
    [else]
    {RANDOM 1..4}
    [item]
        x=${ARSONVAR}.x
        y=${ARSONVAR}.y
        name=steppe_burnedvillage
        image=scenery/village-human-burned$random|.png
    [/item]
#fixed tarbynns creating fire when destroying villages
    [if]
    [have_unit]
        id=${ARSONVAR}.id
        ability=steppe_arsontype_tarbynn
    [/have_unit]
    [else]
    [item]
        x=${ARSONVAR}.x
        y=${ARSONVAR}.y
        name=steppe_flames
        halo=scenery/flames[01~15].png:50
    [/item]
    [sound_source]
        id=steppe_flames_${ARSONVAR}.x|_${ARSONVAR}.y|
        sounds=ambient/campfire.ogg
        delay=9000
        chance=100
        check_fogged=no
        check_shrouded=yes
        x,y=${ARSONVAR}.x,${ARSONVAR}.y
        full_range=5
        fade_range=3
        loop=-1
    [/sound_source]
    [set_variables]
        name=burning_tile_information
        mode=append
        [value]
            x=${ARSONVAR}.x
            y=${ARSONVAR}.y
            turn_of_extinguish=$"($turn_number| + 3)"
            turn_of_true_extinguish=$"($turn_number| + 6)"
        [/value]
    [/set_variables]
    [/else]
    [/if]
    [/else]
    [/if]
    [store_side]
        side=${ARSONVAR}.side
        variable=arsonistside
    [/store_side]
#    {VARIABLE arsongold "$($arsonistside.village_gold| * (2 + ${ARSONVAR}.level|))"}
    {VARIABLE arsongold "$($arsonistside.village_gold| * 2 + 1)"}
        {MODIFY_UNIT x,y=${ARSONVAR}.x,${ARSONVAR}.y attacks_left 0}
#    [scroll_to]
#        x,y=${ARSONVAR}.x,${ARSONVAR}.y
#    [/scroll_to]
    [gold]
        side=$side_number
        amount=$arsongold
    [/gold]
    [sound]
      name=gold.ogg
    [/sound]
    #give experience for burning down villages:
    {VARIABLE_OP {ARSONVAR}.experience add 3}
        [unstore_unit]
            variable={ARSONVAR}
            text=_"$arsongold|g"
            red=255
            green=255
            blue=0
            find_vacant=no
        [/unstore_unit]
    [fire_event]
        name=post pillage
        [primary_unit]
            x,y=$x1,$y1
        [/primary_unit]
    [/fire_event]    
#enddef

#define ARSONEVENT ARSONVAR
{IF_VAR steppe_disable_pillage_scrolling not_equals yes (
[then]
    [scroll_to]
        x,y=${ARSONVAR}.x,${ARSONVAR}.y
    [/scroll_to]
[/then]
)}

    [if]
    [have_unit]
        id=${ARSONVAR}.id
        ability=steppe_arsontype_tarbynn
    [/have_unit]
    [then]
    [sound]
        name=magic-dark-big.ogg
    [/sound]
    [delay]
        time=120
    [/delay]
    [sound]
        name=wose-die.ogg
    [/sound]
    [delay]
        time=180
    [/delay]
    {STEPPE_DESTROYVILLAGE {ARSONVAR} ^}
    [/then]
    [else]

    [if]
    [have_unit]
        id=${ARSONVAR}.id
        ability=steppe_arsontype_trample
    [/have_unit]
    [then]
    [sound]
        name=horse-canter.wav
    [/sound]
    [delay]
        time=120
    [/delay]
    [sound]
        name=mace.ogg
    [/sound]
    [delay]
        time=220
    [/delay]
    [sound]
        name=wose-die.ogg
    [/sound]
    [delay]
        time=180
    [/delay]

#    {STEPPE_DESTROYVILLAGE {ARSONVAR} ^Es}
    {STEPPE_DESTROYVILLAGE {ARSONVAR} ^}
    [/then]
    [else]
    [sound]
#        name=melee-fire.ogg
        name=fire.wav
    [/sound]
    [delay]
        time=120
    [/delay]
    [sound]
        name=fire.wav
    [/sound]
    [delay]
        time=220
    [/delay]
    [sound]
        name=wose-die.ogg
    [/sound]
    [delay]
        time=180
    [/delay]
    [sound]
        name=torch-miss.ogg
    [/sound]
    {STEPPE_DESTROYVILLAGE {ARSONVAR} ^Ecf}
    [/else]
    [/if]
    [/else]
    [/if]

#        {MODIFY_UNIT x,y=${ARSONVAR}.x,${ARSONVAR}.y moves $(${ARSONVAR}.max_moves / 3|)}
        {MODIFY_UNIT x,y=${ARSONVAR}.x,${ARSONVAR}.y moves 0}
    [delay]
       time=200
    [/delay]

        [modify_unit]
            [filter]
                id=${ARSONVAR}.id
            [/filter]
            [status]
                poisoned=no
            [/status]
        [/modify_unit]
        [heal_unit]
            [filter]
                id=${ARSONVAR}.id
            [/filter]
            amount=8
            animate=yes
            restore_statuses=no
        [/heal_unit]

        {CLEAR_VARIABLE arsonmoves}
        {CLEAR_VARIABLE arsongold}
        {CLEAR_VARIABLE arsonist}
        {CLEAR_VARIABLE arsonistside}
#enddef

#define STEPPE_PILLAGE_EVENT
[event]
    name=moveto
    id=steppe_arson_event
    first_time_only=no
    [filter]
            ability=steppe_pillage
    [filter_location]
            terrain=*^V*
    [/filter_location]
        [not]
            ability=steppe_slave
        [/not]
    [/filter]
    [store_unit]
        [filter]
           x,y=$x1,$y1
        [/filter]
        variable=arsonist
        kill=no
    [/store_unit]
    {ARSONEVENT arsonist}
[/event]
[event]
    id=steppe_pillaging_event
    name=die
    first_time_only=no

    [filter]
    [not]
        ability=steppe_notrigger_onkill_abilities
    [/not]
    [/filter]

    [filter_second]
        ability=steppe_pillage
        [not]
            ability=steppe_slave
            [or]
            ability=steppe_notrigger_onkill_abilities
            [/or]
        [/not]
    [/filter_second]

        [store_unit]
            [filter]
                 x,y=$x1,$y1
            [/filter]
            variable=lootedunit
        [/store_unit]
        {VARIABLE lootgold "$($lootedunit.cost| * 0.75)"}
        {VARIABLE_OP lootgold round ceil}
    [gold]
        side=$second_unit.side
        amount=$lootgold
    [/gold]
    [sound]
      name=gold.ogg
    [/sound]
        [unstore_unit]
            variable=second_unit
            text=_"$lootgold|g"
            red=255
            green=255
            blue=0
            find_vacant=no
        [/unstore_unit]
        {CLEAR_VARIABLE lootedunit}
        {CLEAR_VARIABLE lootedunittype}
        {CLEAR_VARIABLE lootgold}
[/event]
[event]
    name=side turn
    id=steppe_fireextinguish_event
    first_time_only=no
#    [chat]
#        message=_"fire extinguish event triggered"
#    [/chat]

    {VARIABLE i 0}
    [while]
        [variable]
        name=i
        less_than=$burning_tile_information.length
        [/variable]
        [do]

        [if]
            [variable]
                name=burning_tile_information[$i].turn_of_extinguish
                less_than_equal_to=$turn_number
            [/variable]

            [then]
#                [chat]
#                    message=_"fire extinguish event succeeded x: $this_item.x, y: $this_item.y"
#                [/chat]

                [remove_item]
                    x=$burning_tile_information[$i].x
                    y=$burning_tile_information[$i].y
                    image=steppe_flames
                [/remove_item]

 
#                [clear_variable]
#                    name=this_item
#                [/clear_variable]
            [/then]
        [/if]

        [if]
            [variable]
                name=burning_tile_information[$i].turn_of_true_extinguish
                less_than_equal_to=$turn_number
            [/variable]

            [then]
#                [chat]
#                    message=_"fire true extinguish event succeeded x: $this_item.x, y: $this_item.y"
#                [/chat]

                [terrain]
                terrain=^
                x,y=$burning_tile_information[$i].x,$burning_tile_information[$i].y
                layer=overlay
                [/terrain]
 
                [remove_sound_source]
                    id=steppe_flames_$burning_tile_information[$i].x|_$burning_tile_information[$i].y|
                [/remove_sound_source]

                {CLEAR_VARIABLE burning_tile_information[$i]}
                {VARIABLE_OP i sub 1}#this is to fix weirdness when something in an array is deleted
            [/then]
        [/if]

        [set_variable]
        name=i
        add=1
        [/set_variable]
        [/do]
    [/while]
    {CLEAR_VARIABLE i}

    [foreach]
        array=burning_tile_information
        index_var=i
        [do]
        [/do]
    [/foreach]
[/event]
#enddef

#define ABILITY_PILLAGE TYPE
    # Canned definition of the Pillage ability to be included in an
    # [abilities] clause.  Note: this is deliberately unbalanced WML,
    # in order to close the abilities clause then insert the event
    # then reopen the abilities clause.
    [dummy]
        id=steppe_pillage
        name=_"pillage"
#so the ability is invisible when inactive:
        name_inactive=""
        female_name_inactive=""
        description=_"Whener this unit kills an enemy, they earn their side an amount of gold equal to 75% (rounded up) of the killed enemy's gold cost.

        When moving onto a village, this unit automatically destroys it, giving the arsonist's side some gold (equal to 2+1 times the side's village gold setting), giving the unit 3 experience, healing the unit by 8 HP and removing poison. This ability does not work while enslaved. If a unit with pillage is leader (except in RPG), the side gains a bit of extra income to compensate for the faction usually not being able to hold villages."
        [filter]
        [not]
            ability=steppe_slave
        [/not]
        [/filter]
    [/dummy]
    [dummy]
        id=steppe_arsontype_{TYPE}
    [/dummy]
    # wmlxgettext: [abilities]
[/abilities]
{STEPPE_PILLAGE_EVENT}
[+abilities]
    # wmlxgettext: [/abilities]
#enddef
# wmllint: unbalanced-off

[modification]
    id=GSE_Pillage_Mod
    name= _ "Steppe Pillage Mod"
    type=hybrid

    description=_"This mod allows using the 'pillage' ability that the Bull Tumen faction had pre-rework. The mod has the following options in the mod option menu:
-give pillage to all sides
-give pillage only to Bull Tumen"
    [options]
        #TODO: maybe add some option so players can choose which sides get pillage and which don't
        [choice]
            id=gse_pillage_mod_mode
            name=_"Who can use pillage?"
            description=_"Decides whether players can make enemies speak or not."
            default=all
            [item]
                name=_"All sides"
                value=all
            [/item]
            [item]
                name=_"Bull Tumen only"
                value=tumen
            [/item]
        [/choice]
    [/options]

    [event]
        name=start

    [/event]

    [event]
        name=unit placed
        id=steppe_apply_pillage
        first_time_only=no
        [filter]
            [not]
                ability=steppe_pillage
            [/not]
        [/filter]

        [switch]
            variable=gse_pillage_mod_mode
            [case]
                value=all
                {VARIABLE tmp_pillagemod_unit_is_eligible yes}
            [/case]
            [case]
                value=tumen
                [if]
                [have_unit]
                    id=$unit.id
                    ability=ogrefaction
                [/have_unit]
                [then]
                {VARIABLE tmp_pillagemod_unit_is_eligible yes}
                [/then]
                [else]
                {VARIABLE tmp_pillagemod_unit_is_eligible no}
                [/else]
                [/if]
            [/case]
        [/switch]

        {IF_VAR tmp_pillagemod_unit_is_eligible equals yes (
        [then]
        [object]
            silent=yes
            duration=scenario

            [filter]
                id=$unit.id
            [/filter]

            [effect]
                apply_to=new_ability
                [abilities]
                    {ABILITY_PILLAGE ()}#type is unspecified. previous a non-burning type was used for Tarbynns
                [/abilities]
            [/effect]
        [/object]
        [/then]
        )}
        {CLEAR_VARIABLE tmp_pillagemod_unit_is_eligible}
    [/event]
    {STEPPE_PILLAGE_EVENT}
[/modification]

