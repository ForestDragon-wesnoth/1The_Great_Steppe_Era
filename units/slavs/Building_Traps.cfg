#textdomain wesnoth-gse

#define TRAP_ATTACKANIM
       [animate_unit]
       [filter]
           id=$trap[$i].id
       [/filter]
       flag=trap
       [/animate_unit]
       [object]
        silent=yes
        duration=scenario
        [filter]
           id=$trap[$i].id
        [/filter]
        [effect]
           apply_to=image_mod
           add="~O(0%)"
        [/effect]
       [/object]
#enddef

#define BASETRAP ID NAME HP IMAGE COST PAYLOAD MISC
[unit_type]
    id={ID}
    name={NAME}
    race=mechanical
    image={IMAGE}
    hitpoints={HP}
    movement_type=building
    movement=0
    attacks=0
    experience=100
    level=0
    alignment=neutral
    advances_to=null
    {AMLA_DEFAULT}
    cost={COST}
    usage=trap
#    hide_help=true
#    do_not_list=yes
#    {RESISTANCES}
    [resistance]
        arcane=80
        blade=90
        pierce=90
        fire=120
        cold=100
        impact=100
    [/resistance]
    [attack_anim]
        [filter_attack]
        [/filter_attack]
        offset=0.0
    [/attack_anim]
    {MISC}
    [abilities]
    {ABILITY_STEPPE_BUILDING}
    [hides]
        id=building_trap
        name=_"trap"
        description=_"This unit is invisibile on any terrain. Whenever an enemy moves next to the trap, it self-destructs, damaging the enemy that triggered it by its first attack. This unit can't move or directly attack."
        affect_self=yes
        [filter]
        [/filter]
    [/hides]
#used for filtering in the build e vent
    [trap]
        id=steppe_trap2
        is_trap=yes
    [/trap]
    [/abilities]
[event]
    name=moveto
    id=traptriggermove{ID}
    first_time_only=no
    [filter_location]
    [filter]
        type={ID}
        [filter_side]
             [enemy_of]
                  side=$unit.side
             [/enemy_of]
        [/filter_side]
#doesn't work for some reason:
#        [not]
#            status=uncovered
#        [/not]
    [/filter]
    radius=1
    [/filter_location]
    {VARIABLE enemyofside $unit.side}
    [fire_event]
    name=custom
    id=traptrigger{ID}
    [primary_unit]
    id=$unit.id
    [/primary_unit]
    [/fire_event]
    {IF_VAR tmp_trap_triggered not_equals yes (
    [then]
    [allow_undo]
    [/allow_undo]
    [/then]
    )}
[/event]
#[event]
#    name=attack
#    id=traptriggerattack{ID}
#    first_time_only=no
#    [filter]
#    [/filter]
#    [filter_location]
#    [filter]
#        type={ID}
#        [filter_side]
#             [enemy_of]
#                  side=$unit.side
#             [/enemy_of]
#        [/filter_side]
#    [/filter]
#    radius=1
#    [/filter_location]
#    {VARIABLE enemyofside $unit.side}
#    [fire_event]
#    name=custom
#    id=traptrigger{ID}
#    [primary_unit]
#    id=$unit.id
#    [/primary_unit]
#    [/fire_event]
#[/event]
#[event]
##    name=last breath
#    id=traptriggersiege{ID}
#    first_time_only=no
#    [filter]
#        type={ID}
#    [/filter]
##    [filter_second]
##    [/filter_second]
##    {VARIABLE enemyofside $RAunit[$ty|].side}
##    {IF_VAR payloadtriggered not_equals yes (
##    [then]
#    [fire_event]
#    name=custom
#    id=traptrigger{ID}
#    [primary_unit]
#    id=$unit.id
#    [/primary_unit]
#    [/fire_event]
##    [/then])}
#[/event]
[event]
    name=custom
    id=traptrigger{ID}
    first_time_only=no
#    {IF_VAR enemyofside equals $fakevar (
    {VARIABLE enemyofside $unit.side}
#    )}
    [store_unit]
    [filter]
       type={ID}
    [filter_location]
       x,y=$x1,$y1
       radius=1
#       [or]
#       x,y=$unit.x,$unit.y
#       radius=1
#       [/or]
    [/filter_location]
        [filter_side]
             [enemy_of]
                  side=$enemyofside
             [/enemy_of]
        [/filter_side]
    [/filter]
    variable=trap
    kill=no
    [/store_unit]
    {IF_VAR trap.length greater_than 0 (
    [then]
    {VARIABLE tmp_trap_triggered yes}
    {FOREACH trap i}
    {PAYLOAD}
#    {VARIABLE payloadtriggered yes}
    [kill]
      id=$trap[$i].id
      animate=no
      fire_event=no
    [/kill]
#    {CLEAR_VARIABLE payloadtriggered}
    {NEXT i}
    [/then])}
    {CLEAR_VARIABLE trap}
    {CLEAR_VARIABLE enemyofside}
[/event]

[/unit_type]
#enddef
{BASETRAP Slav_Spiketrap _"Spike Trap" 12 "units/buildings/spikes.png" 4 (
       [sound]
            name=spear.ogg
       [/sound]
       [harm_unit]
            [filter]
                [not]
                    ability=trap
                    [or]
                    [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                    [/filter_wml]
                    [/or]
                [/not]
                #only hits the unit who triggered the trap
                x,y=$x1,$y1
#                [filter_adjacent]
#                    id=$trap[$i].id
#                [/filter_adjacent]
                [filter_side]
                    [enemy_of]
                        side=$trap[$i].side
                    [/enemy_of]
                [/filter_side]
            [/filter]
            [filter_second]
                id=$trap[$i].id
            [/filter_second]
            amount=$trap[$i].attack[0].damage
            damage_type=$trap[$i].attack[0].type
            experience=yes
            fire_event=yes
            animate=yes
        [/harm_unit] 
) (

    [attack]
        name=spikes
        description=_"spikes"
        icon=attacks/spikes.png
        type=pierce
        range=melee
        damage=9
        number=1
        defense_weight=0.0
    [/attack]
)}

{BASETRAP Slav_Poison_Spiketrap _"Poison Spike Trap" 12 "units/buildings/spikes-poison.png" 4 (
       [sound]
            name=spear.ogg
       [/sound]
       [sound]
            name=poison.ogg
       [/sound]
       [harm_unit]
            [filter]
                [not]
                    ability=trap
                    [or]
                    [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                    [/filter_wml]
                    [/or]
#extra condition to prevent stacking of the effect
                    [or]
                    [filter_wml]
                    [status]
                        immobilized=yes
                    [/status]
                    [/filter_wml]
                    [/or]
                [/not]
                [filter_adjacent]
                    id=$trap[$i].id
                [/filter_adjacent]
                [filter_side]
                    [enemy_of]
                        side=$trap[$i].side
                    [/enemy_of]
                [/filter_side]
            [/filter]
            [filter_second]
                id=$trap[$i].id
            [/filter_second]
            amount=$trap[$i].attack[0].damage
            damage_type=$trap[$i].attack[0].type
            experience=yes
            fire_event=yes
            poisoned=yes
            animate=yes
        [/harm_unit] 
) (
    [attack]
        name=spikes
        description=_"spikes"
        icon=attacks/spikes-poison.png
        type=pierce
        range=melee
        damage=14
        number=1
        defense_weight=0.0
        [specials]
            {WEAPON_SPECIAL_POISON}
        [/specials]
    [/attack]
)}

#{BASETRAP Pit_Trap "Pit Trap" "Ловушка-Яма" 8 "units/buildings/pit.png" 8 (
#    [store_unit]
#        [filter]
#                [not]
#                    ability=trap
#                    [or]
#                    [filter_wml]
#                    [status]
#                        petrified=yes
#                    [/status]
#                    [/filter_wml]
#                    [/or]
#                    [or]
#                    [filter_wml]
#                    [status]
#                        immobilized=yes
#                    [/status]
#                    [/filter_wml]
#                    [/or]
#                    [or]
#                        formula="($this_unit.movement_costs.unwalkable - 0 > 0)" #check if the unit can move over unwalkable
#                    [/or]
#                [/not]
#                [filter_adjacent]
#                    id=$trap[$i].id
#                [/filter_adjacent]
#                [filter_side]
#                    [enemy_of]
#                        side=$trap[$i].side
#                    [/enemy_of]
#                [/filter_side]
#        [/filter]
#        variable=tmp_pit_trap_target
#    [/store_unit]
#
#    {VARIABLE pit_trap_random_limit $tmp_pit_trap_target.length}
#    {VARIABLE_OP pit_trap_random_limit sub 1}
#    {RANDOM 0..$pit_trap_random_limit}
#    {VARIABLE tmp_pittarget_number $random}
#
##since the array number is offset by one from the length (if there are 2 units, the length is 2, but the units are [0] and [1])
#
#    {CLEAR_VARIABLE pit_trap_random_limit}
#
#
#    {FOREACH tmp_pit_trap_target e}
#
##check if the moveto/attack unit overlaps with the current unit
#    [if]
#    [have_unit]
#        id=$unit.id
#        [and]
#            id=$tmp_pit_trap_target[$e].id
#        [/and]
#    [/have_unit]
#    [then]
#        {VARIABLE tmp_pittarget_number $e}
#    [/then]
#    [/if]
#    {NEXT e}
#
#
#    {VARIABLE tmp_trap_x $trap[$i].x}
#    {VARIABLE tmp_trap_y $trap[$i].y}
#    [kill]
#      id=$trap[$i].id
#      animate=no
#      fire_event=no
#    [/kill]
#    [teleport]
#       [filter]
#           id=$tmp_pit_trap_target[$tmp_pittarget_number].id
#       [/filter]
#       animate=no
#       x,y=$tmp_trap_x,$tmp_trap_y
#    [/teleport]
#    [harm_unit]
#         [filter]
#             id=$tmp_pit_trap_target[$tmp_pittarget_number].id
#         [/filter]
#         [filter_second]
#             id=$trap[$i].id
#         [/filter_second]
#         amount=$trap[$i].attack[0].damage
#         damage_type=$trap[$i].attack[0].type
#         experience=yes
#         fire_event=yes
#         slowed=yes
#         animate=yes
#    [/harm_unit]
#
##    [chat]
##        message=$tmp_pit_trap_target[$tmp_pittarget_number].movement_costs.unwalkable
##    [/chat]
#    {MODIFY_UNIT id=$tmp_pit_trap_target[$tmp_pittarget_number].id status.immobilized yes}
#        [object]
#            silent=yes
#            [filter]
#                find_in=tmp_pit_trap_target[$tmp_pittarget_number]
#            [/filter]
#            {STEPPE_DEFENSE_MPCOST_CHANGE 0 90}
#        [/object]
#    [set_variables]
#        name=pittrap_unit_information
#        mode=append
#        [value]
#            id=$tmp_pit_trap_target[$tmp_pittarget_number].id
#            side=$tmp_pit_trap_target[$tmp_pittarget_number].side
#            turn_of_mobilizing=$"($turn_number| + 3)"
#        [/value]
#    [/set_variables]
#    [store_locations]
#        x,y=$tmp_trap_x,$tmp_trap_y
#        variable=tmp_steppe_pit_location
#    [/store_locations]
#    [set_variables]
#        name=pit_information
#        mode=append
#        [value]
#            x=$tmp_trap_x
#            y=$tmp_trap_y
#            terrain=$tmp_steppe_pit_location.terrain
#            turn_of_reset=$"($turn_number| + 2)"            
#        [/value]
#    [/set_variables]
#    {CLEAR_VARIABLE tmp_steppe_pit_location}
#[terrain]
#terrain=Pttr
#x,y=$tmp_trap_x,$tmp_trap_y
#layer=base
#[/terrain]
#
#    {CLEAR_VARIABLE tmp_pit_trap_target}
#    {CLEAR_VARIABLE tmp_pittarget_number}
#    {CLEAR_VARIABLE tmp_trap_x}
#    {CLEAR_VARIABLE tmp_trap_y}
#) (
#    [attack]
#        name=pit
#        {TRANSLATE_ATTACK _"pit" "яма"}
#        icon=attacks/sand-storm.png
#        type=impact
#        range=melee
#        damage=12
#        number=1
#        defense_weight=0.0
#    [specials]
#        {WEAPON_SPECIAL_SLOW}
#        [dummy]
#            id=steppe_pittrap
#            {TRANSLATE_ABILITY_HIDES _"pit trap" _"ловушка-яма"}
#            {TRANSLATE_DESCRIPTION _"When triggered, this trap immobilizes enemies for 3 turns and temporarily replaces the terrain under them with a pit. Doesn't #work on units who can fly over unwalkable terrain. Unlike normal traps this can only hit one unit at once, and the unit is moved to the location of the #trao." _"Эта ловушка иммобилизирует врагов на 3 хода и временно заменят местность под ними на яму. Не работает на юнитов которые могут летать над #пропастями. В отличии от обычных ловушек эта ловушка не может атаковать больше одного юнита, и юнит передвигается на ту клетку где была ловушка."}
#        [/dummy]#todo: add a dummy immobilize weapon special here
#    [/specials]
#    [/attack]
#[event]
#    name=side turn
#    id=steppe_immobilize_event2
#    first_time_only=no
#
#    {FOREACH pittrap_unit_information i}
#        [if]
#            [variable]
#                name=pittrap_unit_information[$i].turn_of_mobilizing
#                less_than_equal_to=$turn_number
#            [/variable]
#            [and]
#                [variable]
#                    name=pittrap_unit_information[$i].side
#                    equals=$side_number
#                [/variable]
#            [/and]
#
#            [then]
#        [object]
#            silent=yes
#            [filter]
#                id=$pittrap_unit_information[$i].id
#            [/filter]
#            {STEPPE_DEFENSE_MPCOST_CHANGE 0 -90}
#        [/object]
#        {MODIFY_UNIT id=$pittrap_unit_information[$i].id status.immobilized no}
#
#                [clear_variable]
#                    name=pittrap_unit_information[$i]
#                [/clear_variable]
#            [/then]
#        [/if]
#    {NEXT i}
#    {FOREACH pit_information i}
#        [if]
#            [variable]
#                name=pit_information[$i].turn_of_reset
#                less_than_equal_to=$turn_number
#            [/variable]
#            [then]
#        [terrain]
#            terrain=$pit_information[$i].terrain
#            x,y=$pit_information[$i].x,$pit_information[$i].y
#            layer=base
#        [/terrain]
#        [object]
#            silent=yes
#            [filter]
#                find_in=pittrap_unit_information[$i]
#            [/filter]
#            {STEPPE_DEFENSE_MPCOST_CHANGE 0 -90}
#        [/object]
#        {MODIFY_UNIT id=$pittrap_unit_information[$i].id status.immobilized no}
#
#                [clear_variable]
#                    name=pit_information[$i]
#                [/clear_variable]
#            [/then]
#        [/if]
#    {NEXT i}
#[/event]
#
#[event]
#    name=victory
#    id=steppe_immobilize_event3
#    first_time_only=no
#    
#    {FOREACH pittrap_unit_information i}
#        [object]
#            silent=yes
#            [filter]
#                find_in=pittrap_unit_information[$i]
#            [/filter]
#            {STEPPE_DEFENSE_MPCOST_CHANGE 0 -90}
#        [/object]
#       {MODIFY_UNIT id=$pittrap_unit_information[$i].side.id status.immobilized no}
#
#                [clear_variable]
#                    name=pittrap_unit_information[$i]
#                [/clear_variable]
#    {NEXT i}
#    {CLEAR_VARIABLE pittrap_unit_information}
#[/event]
#)}