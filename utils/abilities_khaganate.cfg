#textdomain wesnoth-gse

#define STEPPE_SLAVEFREE_EXCEPTION
            ability=steppe_slave
#            [or]
#              level=0
#            [/or]
            [or]
                [filter_wml]
                    [status]
                        not_living="yes"
                    [/status]
                [/filter_wml]
                [not]
                type={STEPPE_NONLIVINGEXCEPTION}
                [/not]
            [/or]
            [or]
            ability=steppe_captured
            [/or]
#            [or]
#            ability=khaganatefaction
#            [/or]
            [or]
            ability=steppe_cattle
            [/or]
            [or]
            race=bull
            [/or]
            [or]
            race=wolf
            [/or]
            [or]
            race=monster
            [/or]
            [or]
            race=bats
            [/or]
            [or]
            race=falcon
            [/or]
#enddef

#define ABILITY_KHAGANATEFACTION
    [dummy]
        id=khaganatefaction
    [/dummy]
#enddef

#define ABILITY_FREED
#slave units won't retain their slave ability on advancing if already freed
    [dummy]
        id=steppe_slave_freed
    [/dummy]
#enddef

#define ABILITY_WASSLAVE
#for variation filtering
    [dummy]
#TODO: rename this to steppe_wasslave
        id=wasslave
    [/dummy]
#enddef

#define ABILITY_WASLEADER
#restores canrecruit=yes upon freeing
    [dummy]
        id=steppe_slave_wasleader
    [/dummy]
#enddef

#define ENSLAVE_FOREACH ENSLAVE_SIDE
    {FOREACH UNIT_store i}
        [set_variable]
            name=UNIT_id
            value=$UNIT_store[$i].id
        [/set_variable]
        [heal_unit]
            [filter]
                id=$UNIT_id
            [/filter]
            amount=full
            restore_statuses=no
        [/heal_unit]
        [if]
        [have_unit]
            id=$UNIT_id
            [not]
               ability=steppe_slave
            [/not]
        [/have_unit]
        [then]
        [modify_unit]
            [filter]
                id=$UNIT_id
            [/filter]
            [variables]
                origside=$UNIT_store[$i].side
            [/variables]
        [/modify_unit]
        [/then]
        [/if]
    {MODIFY_UNIT id=$UNIT_id side {ENSLAVE_SIDE}}
        [if]
        [have_unit]
            id=$UNIT_id
            canrecruit=yes
        [/have_unit]
        [then]
        [object]
            silent=yes
            duration=forever
            [filter]
                id=$UNIT_id
            [/filter]
       [effect]
          apply_to=new_ability
          [abilities]
              {ABILITY_WASLEADER}
          [/abilities]
       [/effect]
        [/object]
    {MODIFY_UNIT id=$UNIT_id canrecruit no}    
        [/then]
        [/if]
        [if]
        [have_unit]
            id=$UNIT_id
            [filter_wml]
                variation=freed
            [/filter_wml]
        [/have_unit]
        [then]
    {MODIFY_UNIT id=$UNIT_id variation ()}    
        [/then]
        [/if]
    [capture_village]
    x,y=$UNIT_store[$i].x,$UNIT_store[$i].y
    side=$second_unit.side
    [/capture_village]
        [object]
            silent=yes
            duration=forever
            [filter]
                id=$UNIT_id
            [/filter]
            [effect]
                apply_to=hitpoints
                full_heal=yes
            [/effect]
            [effect]
                apply_to=hitpoints
                increase=-50%
            [/effect]
       [effect]
          apply_to=new_ability
          [abilities]
              {ABILITY_STEPPE_SLAVE}
#              {ABILITY_SIDE $UNIT_store[$i].side}
          [/abilities]
       [/effect]
       [effect]
          apply_to=remove_ability
          [abilities]
             {ABILITY_FREED}
          [/abilities]
       [/effect]
        [/object]
#no longer needed
#        [modify_unit]
#            [filter]
#                id=$UNIT_id
#            [/filter]
#            {TRAIT_SLAVE}
#        [/modify_unit]
        [unit_overlay]
               id=$UNIT_id
               image=misc/hero-icon-old.png~CS(-101,-101,-101)
        [/unit_overlay]
        [redraw][/redraw]
    [store_unit]
        [filter]
            id=$UNIT_id
        [/filter]
        variable=steppe_enslavemessage_unitstore
        kill=no
    [/store_unit]
    [if]
        [variable]
            name=steppe_enslavemessage_unitstore.gender
            equals=female
        [/variable]

        [then]
            [set_variable]
                name=tmp_enslave_text
                value= _ "female^Enslaved!"
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=tmp_enslave_text
                value= _ "Enslaved!"
            [/set_variable]
        [/else]
    [/if]
    [unstore_unit]
        variable=steppe_enslavemessage_unitstore
        text=$tmp_enslave_text
        red=255
        green=126
        blue=0
        find_vacant=no
    [/unstore_unit]
    [fire_event]
        name=steppe_customevent_enslave
        [primary_unit]
            id=$UNIT_id
        [/primary_unit]
    [/fire_event]
    [fire_event]
        name=steppe_customevent_changeside
        [primary_unit]
            id=$UNIT_id
        [/primary_unit]
    [/fire_event]
#adds the citizenship AMLA if the unit is max level when enslaved:
    [fire_event]
        id=steppe_slave_citizenship
        [primary_unit]
            id=$UNIT_id
        [/primary_unit]
    [/fire_event]
    {CLEAR_VARIABLE steppe_enslavemessage_unitstore}
    {CLEAR_VARIABLE UNIT_id}
    {CLEAR_VARIABLE tmp_enslave_text}
    {NEXT i}

    {CLEAR_VARIABLE UNIT_store}
#enddef

#define STEPPE_ENSLAVE_DESCRIPTION
_"Instead of killing living enemies, this attack turns them into slaves. Upon being enslaved, the enemy unit's hitpoints are set to 50% of their max value, and the unit cannot move/attack on the same turn as being enslaved. Units with the 'pillage' ability can't use it while enslaved. Enslaving an enemy leader (unless the enemy has another leader) also enslaves all of his enslaveable units. This attack also converts enemy slaves to you"#enddef


#define WEAPON_SPECIAL_STEPPE_ENSLAVE LEVEL
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [enslave]
        id=steppe_enslave
        name=_"enslave "+{LEVEL}
        description={STEPPE_ENSLAVE_DESCRIPTION}+_" Doesn't work on mechanical units, or units whose level is above that specified in the weapon special's name (however, it can be convert enemy slaves regardless of level)."
        enslave_level={LEVEL}
        works_on_nonliving=yes
    [/enslave]
#enddef

#define WEAPON_SPECIAL_STEPPE_ENSLAVE_LIVING LEVEL
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [enslave]
        id=steppe_enslave
        name=_"enslave living "{LEVEL}
        description={STEPPE_ENSLAVE_DESCRIPTION}+_" Doesn't work on non-living units (except vampires), or units whose level is above that specified in the weapon special's name (however, it can be convert enemy slaves regardless of level)."
        enslave_level={LEVEL}
        works_on_nonliving=no
    [/enslave]
#enddef



#enslave events have their own macro, otherwise AMLA doesn't work properly:
#define STEPPE_ENSLAVE_EVENTS
    [event]
    name=last breath
    id=khaganate_enslave_event1
    first_time_only=no
    [filter]
            [not]
                 ability=steppe_slave#uses the convert event instead
#                 canrecruit=yes
#non-living calculation is now done below
#                [filter_wml]
#                    [status]
#                        not_living="yes"
#                    [/status]
#                [/filter_wml]
#                [not]
#                type={STEPPE_NONLIVINGEXCEPTION}
#                [/not]
#canrecruit is no longer checked in filter, as it's now checked in the event
#                [or]
#                  canrecruit=yes
#                [/or]
#                [or]
#                  ability=loyal
#                [/or]
#                [or]
#                   ability=steppe_slave#uses the convert event instead
#                [/or]
            [/not]
    [/filter]
    [filter_second_attack]
       special=steppe_enslave
    [/filter_second_attack]

    [lua]
        code=<<
        wesnoth.require "~add-ons/1The_Great_Steppe_Era/lua/steppe_lua_functions.lua"

        wesnoth.set_variable("tmp_enslave_level", steppe_find_enslave_level("second_weapon")) 

        wesnoth.set_variable("tmp_enslave_nonliving", steppe_find_enslave_nonliving("second_weapon")) 
        >>
    [/lua]

#    [chat]
#       message="enslave event triggered"
#    [/chat]

    {IF_VAR unit.level less_than_equal_to $tmp_enslave_level (
    [then]

#    [chat]
#       message="first enslave check passed"
#    [/chat]

#check if either the unit is living, or if the enslaver has the "enslave undead" AMLA:
    [if]
    {VARIABLE_CONDITIONAL unit.status.not_living not_equals yes}    
    [or]
    {VARIABLE_CONDITIONAL tmp_enslave_nonliving equals yes}
    [and]
    {VARIABLE_CONDITIONAL unit.race not_equals mechanical}    
    [/and]
    [/or]
    [or]
    {VARIABLE_CONDITIONAL unit.race equals steppevampire} 
    [/or]
    [then]

    {VARIABLE tmp_slaveisleader $unit.canrecruit}
    {VARIABLE tmp_slaveside $unit.side}

#    [chat]
#    message=_"slave canrecruit: $tmp_slaveisleader|"
#    [/chat]


    [store_unit]
        [filter]
            id=$unit.id
#            side=$unit.side
        [/filter]

        variable=UNIT_store
        kill=no
    [/store_unit]
    {ENSLAVE_FOREACH $second_unit.side}
#    [chat]
#       message="enslave event triggered"
#    [/chat]

    #this code is to prevent both the enslave/convert events being triggered at the same time.
    {VARIABLE steppe_enslave_triggered yes}

    {MODIFY_UNIT id=$unit.id moves 0}
    {MODIFY_UNIT id=$unit.id attacks_left 0}

#the 'enslave all units if the enemy is a leader' is now part of the main event instead of a seperate event:
    [if]
    {VARIABLE_CONDITIONAL tmp_slaveisleader equals yes}
    [and]
    [not]
    [have_unit]
    side=$unit.side
    canrecruit=yes
    [not]
    id=$unit.id
    [/not]
    [/have_unit]
    [/not]
    [/and]
    [then]

#    [chat]
#    message="leader enslave triggered"
#    [/chat]

#in the unit has enslave_undead, enslave undead on the enemy team too, otherwise just living units
    [if]
    {VARIABLE_CONDITIONAL tmp_enslave_nonliving equals yes}
    [then]
    [store_unit]
        [filter]
            side=$tmp_slaveside
            [not]
                id=$unit.id
                [or]
                    trait=mechanical#so it works on other add-ons' machine races
                [/or]
            [/not]
        [/filter]
        variable=UNIT_store
        kill=no
    [/store_unit]
    [/then]
    [else]
    [store_unit]
        [filter]
            side=$tmp_slaveside
            [not]
                id=$unit.id
                [and]
                [filter_wml]
                    [status]
                        not_living="yes"
                    [/status]
                [/filter_wml]
                [not]
                    race=steppevampire
                [/not]
                [/and]
            [/not]
        [/filter]
        variable=UNIT_store
        kill=no
    [/store_unit]
    [/else]
    [/if]

    {ENSLAVE_FOREACH $second_unit.side}
    [/then]
    [/if]

    [/then]
    [/if]

    [/then]
    [else]
    [/else]
    )}
    {CLEAR_VARIABLE tmp_enslave_level}
    {CLEAR_VARIABLE tmp_enslave_nonliving}
    {CLEAR_VARIABLE tmp_slaveisleader}
    {CLEAR_VARIABLE tmp_slaveside}
   [/event]
   [event]
    name=last breath
    id=steppe_enslave_convert
    first_time_only=no
    [filter]
    ability=steppe_slave
    [/filter]
   
    [filter_second_attack]
        special=steppe_enslave
    [/filter_second_attack]

    [if]
    {VARIABLE_CONDITIONAL steppe_enslave_triggered equals yes}
    [then]
#    [chat]
#       message="enslave convert prevented"
#    [/chat]
    {CLEAR_VARIABLE steppe_enslave_triggered}
    [/then]
    [else]

#    [chat]
#       message="enslave convert event triggered"
#    [/chat]

    [capture_village]
    x,y=$unit.x,$unit.y
    side=$second_unit.side
    [/capture_village]

    {VARIABLE unit.hitpoints $unit.max_hitpoints}
    {VARIABLE_OP unit.hitpoints multiply 0.5}
    {VARIABLE unit.side $second_unit.side}

    [if]
        [variable]
            name=unit.gender
            equals=female
        [/variable]

        [then]
            [set_variable]
                name=tmp_convert_text
                value= _ "female^Converted!"
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=tmp_convert_text
                value= _ "Converted!"
            [/set_variable]
        [/else]
    [/if]
    [unstore_unit]
        variable=unit
        text=$tmp_convert_text
        red=255
        green=126
        blue=0
        find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE tmp_convert_text}
    {MODIFY_UNIT id=$unit.id moves 0}
    {MODIFY_UNIT id=$unit.id attacks_left 0}

    [/else]
    [/if]
   [/event]
#unused event
#   [event]
#    name=die
#    first_time_only=no
#    id=khaganate_enslave_event3
#    [filter]
#       canrecruit=yes
#    [/filter]
#        [if]
#        [have_unit]
#           side=$unit.side
#           canrecruit=yes
#        [/have_unit]
#        [then]
#        [/then]
#        [else]
#    [store_unit]
#        [filter]
#            side=$unit.side
#        [/filter]
#
#        variable=steppe_slave_store
#        kill=no
#    [/store_unit]
#    {FOREACH UNIT_store i}
#    {MODIFY_UNIT id=$UNIT_store[$i].id side $UNIT_store[$i].variables.origside}
#    {MODIFY_UNIT id=$UNIT_store[$i].id canrecruit $UNIT_store[$i].canrecruit}
#    {NEXT i}
#        [/else]
#        [/if]
#   [/event]
#enddef

#define ABILITY_STEPPE_SLAVE
    [dummy]
        id=steppe_slave
        name=_"slave"
#        description=_"This unit is a slave, and has very little loyalty to their masters. They deal 25% less damage unless there is a non-slave ally (master) next to them, and If attacked without any non-slave 'allies' nearby, they will join the enemy team (except if the unit used to be a leader, and was allied with the freer side), and regain their freedom. They can also be freed if the total level of freers is higher than that of the slavers. Slave cannot move/attack on the same turn as they are freed. Undead/animal units cannot free slaves."
        description=_"This unit is a slave, and has very little loyalty to their masters. If attacked without any non-slave 'allies' nearby (or if attacked while the level of nearby freers (in a 2-tile radius from the slave) is higher than that of the nearby slavers (in a 3-tile radius from the slave. Slaves count as 0.5 levels each regardless of their actual level, and invisible (ambush,nightstalk, etc.) units are not counted for the total level)), they will join the enemy team, and regain their freedom. Khaganate units convert slaves instead of freeing them. However, this unit cannot be freed by other slaves, non-living or animal units."
    [/dummy]
#commented out for now
#    [leadership]
#        id=leadership
#        value=0#-25
#        cumulative=no
#        affect_self=yes
#        [filter]
#        [not]
#        [filter_adjacent]
#            adjacent=n,ne,se,s,sw,nw
##this code used to not work when I used [ally_of] instead of [allied_with]. it should probably work now, but I will keep this code disabled for the sake of balance #for now
#            [filter_side]
#            [allied_with]
#            side=$this_unit.side
#            [/allied_with]
#            [/filter_side]
#            [not]
#              level=0
#              [or]
#                ability=steppe_slave
#              [/or]
#            [/not]
#            count=1-6#2-6
#        [/filter_adjacent]
#        [/not]
#        [/filter]
#    [/leadership]
     # wmlxgettext: [abilities]
[/abilities]

    [event]
    name=unit placed
    first_time_only=no
    id=steppe_slaveoverlay
    [filter]
       ability=steppe_slave
    [/filter]
    #the condition filter is needed to prevent recursion, as [unit_overlay] triggers the unit placed event
    [filter_condition]
    {VARIABLE_CONDITIONAL tmp_steppe_antiloop not_equals yes}
    [/filter_condition]
    [lua]
        code=<<
        wesnoth.require "~add-ons/1The_Great_Steppe_Era/lua/steppe_lua_functions.lua"

        wesnoth.set_variable("tmp_slave_has_overlay", steppe_check_overlay_x1_y1("misc/hero-icon-old.png~CS(-101,-101,-101)"))
        >>
    [/lua]
#    [chat]
#        message=_"slave has overlay: $tmp_slave_has_overlay|"
#    [/chat]

    {IF_VAR tmp_slave_has_overlay not_equals true (
    [then]
    {VARIABLE tmp_steppe_antiloop yes}
        [unit_overlay]
               x,y=$x1,$y1
               image="misc/hero-icon-old.png~CS(-101,-101,-101)"
        [/unit_overlay]
    [/then])}
    {CLEAR_VARIABLE tmp_slave_has_overlay}
    {CLEAR_VARIABLE tmp_steppe_antiloop}
    [/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define STEPPE_FREESLAVE X Y FREERSIDE
    [sound]
      name={SOUND_LIST:HOLY}
    [/sound]
    [store_unit]
        [filter]
            x,y={X},{Y}
        [/filter]
        variable=steppe_slave
        kill=no
    [/store_unit]

    [capture_village]
    x,y={X},{Y}
    side={FREERSIDE}
    [/capture_village]
    [unstore_unit]
        variable=steppe_slave
        text=_"Freedom!"
        {COLOR_HEAL}
        find_vacant=no
     [/unstore_unit]
     {MODIFY_UNIT id=$steppe_slave.id side {FREERSIDE}}
        [if]
        [have_unit]
            id=$steppe_slave.id
            ability=steppe_slave_wasleader
        [/have_unit]
        [then]
    {MODIFY_UNIT id=$steppe_slave.id canrecruit yes}

#change a leader back to their original side
    {MODIFY_UNIT id=$steppe_slave.id side $steppe_slave.variables.origside}
        [if]
        [have_unit]
            id=$steppe_slave.id
        [filter_side]
        [allied_with]
            side={FREERSIDE}
        [/allied_with]
        [/filter_side]
        [/have_unit]
        [then]
#if the leader's original and the freer side are allies, keep the original side
        [/then]
        [else]
#if the leader's original and the freer side are enemies, the leader joins the freer side instead     
        {MODIFY_UNIT id=$steppe_slave.id side {FREERSIDE}}
        [/else]
        [/if]


        [/then]
        [/if]

        [if]
        [have_unit]
            id=$steppe_slave.id
            ability=wasslave
        [/have_unit]
        [then]
    {MODIFY_UNIT id=$steppe_slave.id variation freed}
    [object]
       [filter]
           id=$steppe_slave.id
       [/filter]
       silent=yes
       [effect]
          apply_to=new_ability
          [abilities]
             {ABILITY_FREED}
          [/abilities]
       [/effect]
    [/object]
        [/then]
        [/if]


    [object]
       [filter]
           id=$steppe_slave.id
       [/filter]
       silent=yes
       [effect]
          apply_to=remove_advancement
          amlas=khaganatecitizen
       [/effect]
    [/object]

    [object]
        silent=yes
        duration=forever
        [filter]
            find_in=unit
        [/filter]
        [effect]
            apply_to=new_advancement
{STEPPE_ADVANCEMENT khaganatecitizen _"Khaganate Citizenship: the unit is no longer a slave, and becomes a khaganate unit, +15% damage, and loyal trait, +20% XP" faction-icons/khaganate.png (
        strict_amla=yes
        max_times=1
        [filter]
            ability=steppe_slave #this is so the AMLA can't be selected if the unit is freed under rare specific conditions
        [/filter]
        [effect]
            apply_to=remove_ability
            [abilities]
                {ABILITY_STEPPE_SLAVE}
                {ABILITY_WASLEADER}
            [/abilities]
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_KHAGANATEFACTION}
            [/abilities]
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
              [dummy]
                 id=steppe_loyaltrait #dummy ability to trigger post advance
              [/dummy]
            [/abilities]
        [/effect]
        [effect]
            apply_to=attack
            increase_damage=15%
        [/effect]
        [effect]
            apply_to=max_experience
            increase=20%
        [/effect]
)}
    [/effect]
    [/object]

    [object]
       [filter]
           id=$steppe_slave.id
       [/filter]
       duration=forever
       silent=yes
       [effect]
          apply_to=remove_ability
          [abilities]
             {ABILITY_STEPPE_SLAVE}
             {ABILITY_WASLEADER}
          [/abilities]
       [/effect]
#commented this out, so freed non-khaganate slaves can no longer be converted back
#       [effect]
#          apply_to=new_ability
#          [abilities]
#             {ABILITY_FREED}
#          [/abilities]
#       [/effect]
    [/object]

#removing the overlay after the slave ability is removed, so that the unit placed event doesn't add the overlay back
    [remove_unit_overlay]
        id=$steppe_slave.id
        image="misc/hero-icon-old.png~CS(-101,-101,-101)"
    [/remove_unit_overlay]

    [fire_event]
        name=steppe_customevent_changeside
        [primary_unit]
            id=$steppe_slave.id
        [/primary_unit]
    [/fire_event]

    {CLEAR_VARIABLE steppe_slave}
#enddef

#define DISLOYAL_STORE_LOCATION ID
[store_locations]
   x,y=$steppe_disloyal_leader.x,$steppe_disloyal_leader.y
   variable=steppe_disloyal_loc
[/store_locations]
[if]
[variable]
    name=steppe_disloyal_loc.length
    greater_than=0
[/variable]
[then]
{MOVE_UNIT id={ID} $steppe_disloyal_leader.x $steppe_disloyal_leader.y}
[/then]
[/if]
{CLEAR_VARIABLE steppe_disloyal_loc}

[fire_event]
    name=steppe_customevent_changeside
    [primary_unit]
        id={ID}
    [/primary_unit]
[/fire_event]
#enddef


#define STEPPE_SLAVEFREE_LEVELCALC UNITVAR X Y
    {TOTAL_LEVEL_CALC (
    [filter_side]
    [enemy_of]
        side=${UNITVAR}.side
    [/enemy_of]
    [/filter_side]
    [not]
            ability=steppe_slave
            [or]
              level=0
            [/or]
            [or]
              ability=steppe_captured
            [/or]
            [or]
                ability_type_active=hides
                [not]
                  status=uncovered
                [/not]
            [/or]
            [or]
                [filter_wml]
                [status]
                    petrified=yes
                [/status]
                [/filter_wml]
            [/or]
    [/not]
    [filter_location]
        x,y={X},{Y}
        radius=2
    [/filter_location]
    ) freer_points a}

    {TOTAL_LEVEL_CALC (
    [filter_side]
    [allied_with]
        side=${UNITVAR}.side
    [/allied_with]
    [/filter_side]
    [not]
            ability=steppe_slave
            [or]
              level=0
            [/or]
            [or]
              ability=steppe_captured
            [/or]
            [or]
                ability_type_active=hides
                [not]
                  status=uncovered
                [/not]
            [/or]            
            [or]
                [filter_wml]
                [status]
                    petrified=yes
                [/status]
                [/filter_wml]
            [/or]
    [/not]
    [filter_location]
        x,y={X},{Y}
        radius=3
    [/filter_location]
    ) slaver_points a}

    {TOTAL_UNIT_CALC (
    ability=steppe_slave
    [filter_side]
    [allied_with]
        side=${UNITVAR}.side
    [/allied_with]
    [/filter_side]
    [not]
        ability=steppe_captured
        [or]
            ability_type_active=hides
            [not]
              status=uncovered
            [/not]
        [/or]            
        [or]
            [filter_wml]
            [status]
                petrified=yes
            [/status]
            [/filter_wml]
        [/or]
    [/not]    
    [filter_location]
        x,y={X},{Y}
        radius=3
    [/filter_location]
    ) slaver_points2 a}
    {VARIABLE_OP slaver_points2 divide 2}
    {VARIABLE_OP slaver_points add $slaver_points2}

#    [chat]
#       speaker=_"Debug"
#       message= _ "Slaver points2: $slaver_points2|."
#    [/chat]
#enddef

#define STEPPE_SLAVE_OVERSIGHT_FILTER UNITVAR
            [filter_location]
                [filter]
                    ability=steppe_oversight
                [filter_side]
                [allied_with]
                    side=${UNITVAR}.side
                [/allied_with]
                [/filter_side]
                [not]
                    ability=steppe_captured
                    [or]
#this is to prevent an enslaved overseer from overseeing himself :)
                    id=${UNITVAR}.id
                    [/or]
                [/not]
                [/filter]
                radius=1
            [/filter_location]
            [or]
            [filter_location]
                [filter]
                    ability=steppe_khagans_presense
                [filter_side]
                [allied_with]
                    side=${UNITVAR}.side
                [/allied_with]
                [/filter_side]
                [not]
                    ability=steppe_captured
                    [or]
#this is to prevent an enslaved khagan from overseeing himself :)
                    id=${UNITVAR}.id
                    [/or]
                [/not]
                [/filter]
                radius=2
            [/filter_location]
            [/or]
#            [or]
#                ability=steppe_captured
#            [/or]
#enddef

#define EVENTLOADER_EVENTS_KHAGANATE
{STEPPE_ENSLAVE_EVENTS}
[event]
    name=attack
    id=khaganate_slavefree
    first_time_only=no
    [filter]
    [not]
            {STEPPE_SLAVEFREE_EXCEPTION}
    [/not]
    [/filter]
    [filter_second]
            ability=steppe_slave
            [not]
            {STEPPE_SLAVE_OVERSIGHT_FILTER second_unit}
            [/not]
    [/filter_second]

    [store_unit]
        [filter]
            x,y=$x2,$y2
        [/filter]

        variable=steppe_slavecalc_unit
        kill=no
    [/store_unit]

    {VARIABLE freer_points 0}
    {VARIABLE slaver_points 0}


#macro from above
    {STEPPE_SLAVEFREE_LEVELCALC steppe_slavecalc_unit $x2 $y2}
 




    [if]
    {VARIABLE_CONDITIONAL freer_points greater_than $slaver_points}
    [then]

#this check is so khaganate cannot free enemy slaves, only convert them
    [if]
    [have_unit]
        side=$unit.side
        canrecruit=yes
        ability=khaganatefaction
    [/have_unit]
    [then]

#stores the origside - if the conditions match it will be greatet than 0, if it fails the check it will be nill, a much more elegant way of checking than changing the unit side and running a [have_unit] check
    [store_side]
        side=$second_unit.variables.origside
        [allied_with]
            side=$unit.side
        [/allied_with]
        variable=tmp_slave_origside
    [/store_side]

    [if]
        {VARIABLE_CONDITIONAL tmp_slave_origside.side greater_than 0}
        [then]
#if the slave was a former ally, free as normal
    {STEPPE_FREESLAVE $x2 $y2 $unit.side}
    {MODIFY_UNIT id=$second_unit.id moves 0}
    {MODIFY_UNIT id=$second_unit.id attacks_left 0}


        [/then]
        [else]

    [if]
        [variable]
            name=second_unit.gender
            equals=female
        [/variable]

        [then]
            [set_variable]
                name=tmp_convert_text
                value= _ "female^Converted!"
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=tmp_convert_text
                value= _ "Converted!"
            [/set_variable]
        [/else]
    [/if]
    {VARIABLE second_unit.side $unit.side}
    [unstore_unit]
        variable=second_unit
        text=$tmp_convert_text
        red=255
        green=126
        blue=0
        find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE tmp_convert_text}
    {MODIFY_UNIT id=$second_unit.id moves 0}
    {MODIFY_UNIT id=$second_unit.id attacks_left 0}


        [/else]
        [/if]

        {CLEAR_VARIABLE tmp_slave_origside}

    [/then]
    [else]
    {STEPPE_FREESLAVE $x2 $y2 $unit.side}
    {MODIFY_UNIT id=$second_unit.id moves 0}
    {MODIFY_UNIT id=$second_unit.id attacks_left 0}

    [/else]
    [/if]

    [/then]
    [else]


    [/else]
    [/if]
    

#    [chat]
#       speaker=_"Debug"
#       message= _ "Freer points: $freer_points|. Slaver points: $slaver_points| Slaver points 2: $slaver_points2|. Prisoner free: $prisoner_tofree|"
#    [/chat]
    {CLEAR_VARIABLE freer_points}
    {CLEAR_VARIABLE slaver_points}
    {CLEAR_VARIABLE slaver_points2}
    {CLEAR_VARIABLE steppe_slavecalc_unit}
[/event]
[event]
    name=die
    id=khaganate_leaderdeath_events
    first_time_only=no
    [filter]
            canrecruit=yes
    [/filter]

    [if]
    [not]
    [have_unit]
    canrecruit=yes
    side=$unit.side
    [not]
    ability=steppe_captured
    [/not]
    [/have_unit]
    [/not]
    [then]
#free the slaves, or convert them if the killer's side is also khaganate
    [store_unit]
        [filter]
            side=$unit.side
            ability=steppe_slave
        [/filter]
        variable=steppe_slave2
        kill=no
    [/store_unit]
    [if]
    [have_unit]
        side=$second_unit.side
        canrecruit=yes
        ability=khaganatefaction
    [/have_unit]
    [then]
    {FOREACH steppe_slave2 i}
    {MODIFY_UNIT id=$steppe_slave2[$i].id side $second_unit.side}
    [fire_event]
        name=steppe_customevent_changeside
        [primary_unit]
            id=$steppe_slave2[$i].id
        [/primary_unit]
    [/fire_event]
    [capture_village]
    x,y=$steppe_slave2[$i].x,$steppe_slave2[$i].y
    side=$second_unit.side
    [/capture_village]
    {NEXT i}
    [/then]
    [else]
    {FOREACH steppe_slave2 i}
    {STEPPE_FREESLAVE $steppe_slave2[$i].x $steppe_slave2[$i].y $second_unit.side}
    {NEXT i}
    [/else]
    [/if]

#all disloyal units on the dead leather's side automatically desert to the killer's side
    [store_unit]
        [filter]
            side=$unit.side
            ability=steppe_disloyal
        [not]
#to prevent any weirdness if the leader was disloyal
            id=$unit.id
        [/not]
        [/filter]
        variable=steppe_deserters
        kill=no
    [/store_unit]
    {FOREACH steppe_deserters i}
    [sound]
        name=horn-signals/horn-1.ogg
    [/sound]
    {MODIFY_UNIT id=$steppe_deserters[$i].id side $second_unit.side}
    {MODIFY_UNIT id=$steppe_deserters[$i].id experience "$($steppe_deserters[$i].experience| / 2)"}#halving unit experience
#in case the deserting unit is a leader:

    {MODIFY_UNIT id=$steppe_deserters[$i].id canrecruit no}
    [capture_village]
    x,y=$steppe_deserters[$i].x,$steppe_deserters[$i].y
    side=$second_unit.side
    [/capture_village]

#move the traitor unit to the enemy side's leader

        [store_unit]
            [filter]
                side=$second_unit.side
                canrecruit=yes
            [/filter]
            variable=steppe_disloyal_leader
            kill=no
        [/store_unit]
        {DISLOYAL_STORE_LOCATION $steppe_deserters[$i].id}
        {CLEAR_VARIABLE steppe_disloyal_leader}

    {MODIFY_UNIT id=$steppe_slave2[$i].id side $second_unit.side}
    {NEXT i}

    [/then]
    [/if]
    {CLEAR_VARIABLE steppe_slave}
[/event]
[event]
    name=post advance
    first_time_only=no
    [filter]
      ability=steppe_slave_freed
    [/filter]
    [object]
       [filter]
           id=$unit.id
       [/filter]
       duration=forever
       silent=yes
       [effect]
          apply_to=remove_ability
          [abilities]
             {ABILITY_STEPPE_SLAVE}
          [/abilities]
       [/effect]
    [/object]
    [remove_unit_overlay]
        id=$unit.id
        image="misc/hero-icon-old.png~CS(-101,-101,-101)"
    [/remove_unit_overlay]
[/event]
#slaves lose their slave overlay when advancing to khaganate sentinels/marksmen.
[event]
    name=post advance
    first_time_only=no
    [filter]
        type=Khaganate_Sentinel,Khaganate_Marksman
    [/filter]
    [remove_unit_overlay]
        id=$unit.id
        image="misc/hero-icon-old.png~CS(-101,-101,-101)"
    [/remove_unit_overlay]
[/event]
#for RPG:
[event]
    name=start
    first_time_only=no
    [store_unit]
        [filter]
            canrecruit=yes
            ability=steppe_slave
        [/filter]
        variable=steppe_slaveleader
        kill=no
    [/store_unit]
    {FOREACH steppe_slaveleader i}
    [remove_unit_overlay]
        id=$steppe_slaveleader[$i].id
        image="misc/hero-icon-old.png~CS(-101,-101,-101)"
    [/remove_unit_overlay]
    [object]
       [filter]
           id=$steppe_slaveleader.id
       [/filter]
       duration=forever
       silent=yes
       [effect]
          apply_to=remove_ability
          [abilities]
             {ABILITY_STEPPE_SLAVE}
          [/abilities]
       [/effect]
       [effect]
          apply_to=new_ability
          [abilities]
             {ABILITY_FREED}
          [/abilities]
       [/effect]
    [/object]
    {MODIFY_UNIT id=$steppe_slaveleader.id variation freed}
    {NEXT i}
    {CLEAR_VARIABLE slaveleader}
[/event]
[event]
    name=start
    id=steppe_slavecalculator_menu
    first_time_only=no
    [set_menu_item]
        id=steppe_slavecalculator
        description=_"Calculate whether this unit can be freed/converted"
        image=items/book2.png~CROP(21,23,27,24)~SCALE(20,20)
        #DO NOT SET SYNCED TO NO FOR ANY MENUS THAT ACTUALLY AFFECT THE GAME!!!
        synced=yes
        [show_if]
        {VARIABLE_CONDITIONAL steppe_disable_calculator_menu not_equals yes}
        [/show_if]

        [filter_location]
            [filter]
                    ability=steppe_slave
            [/filter]
        [/filter_location]
        [command]
    [allow_undo] [/allow_undo]

    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]

        variable=steppe_slavecalc_unit
        kill=no
    [/store_unit]

    {VARIABLE freer_points 0}
    {VARIABLE slaver_points 0}

    [if]
    [have_unit]
            id=$steppe_slavecalc_unit.id
            [filter_side]
            [enemy_of]
                side=$side_number
            [/enemy_of]
            [/filter_side]
    [/have_unit]
    [then]
    {VARIABLE steppe_slavecalc_freer_color 00ff00}
    {VARIABLE steppe_slavecalc_slaver_color ff0000}
    [/then]
    [else]
    {VARIABLE steppe_slavecalc_freer_color ff0000}
    {VARIABLE steppe_slavecalc_slaver_color 00ff00}
    [/else]
    [/if]

    [if]
    [have_unit]
        side=$side_number
        canrecruit=yes
        ability=khaganatefaction
    [/have_unit]
    [then]

    {VARIABLE steppe_slavecalc_faction_canfreeslaves _"No"}

    [/then]
    [else]
    {VARIABLE steppe_slavecalc_faction_canfreeslaves _"Yes"}
    [/else]
    [/if]


    [if]
    [have_unit]
        side=$side_number
        canrecruit=yes
        ability=khaganatefaction
    [/have_unit]
    [and]
    [have_unit]
            id=$steppe_slavecalc_unit.id
            [filter_side]
            [enemy_of]
                side=$side_number
            [/enemy_of]
            [/filter_side]
    [/have_unit]
    [/and]
    [then]
#variable used to say that the side cannot free slaves because it's khaganate
    {VARIABLE steppe_slavecalc_thisside_is_khaganate_true yes}
    [/then]
    [else]
    [/else]
    [/if]


    [if]
    [have_unit]
            id=$steppe_slavecalc_unit.id
            {STEPPE_SLAVE_OVERSIGHT_FILTER steppe_slavecalc_unit}
    [/have_unit]
    [then]
    {VARIABLE steppe_slavecalc_oversight_true yes}

    {VARIABLE steppe_slavecalc_oversight _"Yes"}
    [/then]
    [else]

    {VARIABLE steppe_slavecalc_oversight _"No"}

    [/else]
    [/if]

#macro from above
    {STEPPE_SLAVEFREE_LEVELCALC steppe_slavecalc_unit $x1 $y1}

    [if]
    {VARIABLE_CONDITIONAL freer_points greater_than $slaver_points}
    [and]
    {VARIABLE_CONDITIONAL steppe_slavecalc_oversight_true not_equals yes}
    [/and]
    [and]
    {VARIABLE_CONDITIONAL steppe_slavecalc_thisside_is_khaganate_true not_equals yes}
    [/and]
    [then]

    {VARIABLE steppe_slavecalc_canfree _"Yes"}

    {VARIABLE steppe_slavecalc_freeable_color $steppe_slavecalc_freer_color}

    [/then]
    [else]

    {VARIABLE steppe_slavecalc_canfree _"No"}

    {VARIABLE steppe_slavecalc_freeable_color $steppe_slavecalc_slaver_color}

    [/else]
    [/if]
 

    {VARIABLE slaver_points1 $slaver_points}
    {VARIABLE_OP slaver_points1 sub $slaver_points2}

        [message]
            speaker=narrator
            side_for=$side_number
            caption=_"Slave freeing/converting calculator"
            message=_"Total slaver level (including slaves): <span color='#$steppe_slavecalc_slaver_color|'>$slaver_points|</span>
'levels' from slaves (0.5 each): $slaver_points2|
Oversight: <span color='#cccc33'>$steppe_slavecalc_oversight|</span>
Your faction can free slaves: <span color='#cccc33'>$steppe_slavecalc_faction_canfreeslaves|</span>

Total level of freers/converters: <span color='#$steppe_slavecalc_freer_color|'>$freer_points|</span>

Can the unit be freed/converted: <span color='#$steppe_slavecalc_freeable_color|'>$steppe_slavecalc_canfree|</span>

(note: this menu only calculates only the <b>current</b> total levels, which can easily change during an enemy's turn, and invisible units don't affect the total level)"
            image=portraits/factionhint-khaganate.png
        [/message]

    {CLEAR_VARIABLE freer_points}
    {CLEAR_VARIABLE slaver_points}
    {CLEAR_VARIABLE slaver_points1}
    {CLEAR_VARIABLE slaver_points2}
    {CLEAR_VARIABLE steppe_slavecalc_unit}
    {CLEAR_VARIABLE steppe_slavecalc_canfree}
    {CLEAR_VARIABLE steppe_slavecalc_oversight}
    {CLEAR_VARIABLE steppe_slavecalc_oversight_true}
    {CLEAR_VARIABLE steppe_slavecalc_slaver_color}
    {CLEAR_VARIABLE steppe_slavecalc_freer_color}
    {CLEAR_VARIABLE steppe_slavecalc_freeable_color}
    {CLEAR_VARIABLE steppe_slavecalc_thisside_is_khaganate_true}
    {CLEAR_VARIABLE steppe_slavecalc_faction_canfreeslaves}

        [/command]
    [/set_menu_item]


    [set_menu_item]
        id=steppe_disloyalcalculator
        description=_"Calculate whether this unit can desert"
        image=items/book2.png~CROP(21,23,27,24)~SCALE(20,20)
        #DO NOT SET SYNCED TO NO FOR ANY MENUS THAT ACTUALLY AFFECT THE GAME!!!
        synced=yes
        [show_if]
        {VARIABLE_CONDITIONAL steppe_disable_calculator_menu not_equals yes}
        [/show_if]

        [filter_location]
            [filter]
                    ability=steppe_disloyal
                    [not]
                        trait=loyal
                    [/not]
            [/filter]
        [/filter_location]
        [command]
    [allow_undo] [/allow_undo]

    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]

        variable=steppe_disloyalcalc_unit
        kill=no
    [/store_unit]

    {VARIABLE enemy_points 0}
    {VARIABLE khaganate_points $steppe_disloyalcalc_unit.level}

    [if]
    [have_unit]
            id=$steppe_disloyalcalc_unit.id
            [filter_side]
            [enemy_of]
                side=$side_number
            [/enemy_of]
            [/filter_side]
    [/have_unit]
    [then]
    {VARIABLE steppe_disloyalcalc_freer_color 00ff00}
    {VARIABLE steppe_disloyalcalc_khaganate_color ff0000}
    [/then]
    [else]
    {VARIABLE steppe_disloyalcalc_freer_color ff0000}
    {VARIABLE steppe_disloyalcalc_khaganate_color 00ff00}
    [/else]
    [/if]

    [if]
    [have_unit]
            id=$steppe_disloyalcalc_unit.id
            {STEPPE_SLAVE_OVERSIGHT_FILTER steppe_disloyalcalc_unit}
    [/have_unit]
    [then]
    {VARIABLE steppe_disloyalcalc_oversight_true yes}

    {VARIABLE steppe_disloyalcalc_oversight _"Yes"}
    [/then]
    [else]

    {VARIABLE steppe_disloyalcalc_oversight _"No"}

    [/else]
    [/if]

#macro from above
    {STEPPE_DISLOYAL_LEVELCALC steppe_disloyalcalc_unit $x1 $y1}

    [if]
    {VARIABLE_CONDITIONAL enemy_points greater_than $khaganate_points}
    [and]
    {VARIABLE_CONDITIONAL steppe_disloyalcalc_oversight_true not_equals yes}
    [/and]
    [then]

    {VARIABLE steppe_disloyalcalc_candesert _"Yes"}

    {VARIABLE steppe_disloyalcalc_candesert_color $steppe_disloyalcalc_freer_color}

    [/then]
    [else]

    {VARIABLE steppe_disloyalcalc_candesert _"No"}

    {VARIABLE steppe_disloyalcalc_candesert_color $steppe_disloyalcalc_khaganate_color}

    [/else]
    [/if]
 
        [message]
            speaker=narrator
            side_for=$side_number
            caption=_"Disloyal desert-ability calculator"
            message=_"Total khaganate levels: <span color='#$steppe_disloyalcalc_khaganate_color|'>$khaganate_points|</span>
Oversight: <span color='#cccc33'>$steppe_disloyalcalc_oversight|</span>

Total level of enemies of the khaganate: <span color='#$steppe_disloyalcalc_freer_color|'>$enemy_points|</span>

Can the unit desert: <span color='#$steppe_disloyalcalc_candesert_color|'>$steppe_disloyalcalc_candesert|</span>

(note: this menu only calculates only the <b>current</b> total levels, which can easily change during an enemy's turn, and invisible units don't affect the total level)"
            image=portraits/factionhint-khaganate.png
        [/message]

    {CLEAR_VARIABLE freer_points}
    {CLEAR_VARIABLE slaver_points}
    {CLEAR_VARIABLE slaver_points1}
    {CLEAR_VARIABLE slaver_points2}
    {CLEAR_VARIABLE steppe_disloyalcalc_unit}
    {CLEAR_VARIABLE steppe_disloyalcalc_canfree}
    {CLEAR_VARIABLE steppe_disloyalcalc_oversight}
    {CLEAR_VARIABLE steppe_disloyalcalc_oversight_true}
    {CLEAR_VARIABLE steppe_disloyalcalc_khaganate_color}
    {CLEAR_VARIABLE steppe_disloyalcalc_freer_color}
    {CLEAR_VARIABLE steppe_disloyalcalc_candesert_color}

        [/command]
    [/set_menu_item]
[/event]
[event]
    name=unit placed,post advance
    id=steppe_khaganate_halo
    first_time_only=no
    [filter]
    ability=steppe_oversight
    [or]
    ability=steppe_khagans_presense
    [/or]
    [/filter]
    {IF_VAR steppe_disable_oversight_halos not_equals yes  (
    [then]
    [if]
    [have_unit]
    x,y=$x1,$y1
    ability=steppe_khagans_presense
    [/have_unit]
    [then]
    [object]
        silent=yes
        duration=forever
        id=steppe_oversight_halo
        take_only_once=no

        [filter]
            id=$unit.id
        [/filter]

        [effect]
            apply_to=halo
            halo="halo/oversight-aura-khagan.png"
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
              [dummy]
                 id=steppe_halo_dummy_ability #for filtering later
              [/dummy]
            [/abilities]
        [/effect]
    [/object]
    [/then]
    [else]
    [object]
        silent=yes
        duration=forever
        id=steppe_oversight_halo
        take_only_once=no

        [filter]
            id=$unit.id
        [/filter]

        [effect]
            apply_to=halo
            halo="halo/oversight-aura-naga.png"
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
              [dummy]
                 id=steppe_halo_dummy_ability #for filtering later
              [/dummy]
            [/abilities]
        [/effect]        
    [/object]
    [/else]
    [/if]
    [/then]
    )}
[/event]

#removes the halo if the unit is somehow transformed into a non-overseer unit, via add-ons

[event]
    name=post advance
    id=steppe_khaganate_halo_remover
    first_time_only=no
    [filter]
    ability=steppe_halo_dummy_ability
    [not]
    ability=steppe_oversight
    [or]
    ability=steppe_khagans_presense
    [/or]
    [/not]
    [/filter]
    {IF_VAR steppe_disable_oversight_halos not_equals yes  (
    [then]
    [remove_object]
        id=$unit.id
        object_id=steppe_oversight_halo
    [/remove_object]
    [/then]
    )}
[/event]

[event]
    name=die
    id=steppe_oversight_exp_event
    first_time_only=no

    [filter]
    [/filter]
    [filter_second]
        ability=steppe_slave
        [or]
            ability=steppe_disloyal
        [/or]
    [/filter_second]

    [store_unit]
        [filter]
            side=$second_unit.side
            [filter_adjacent]
                 id=$second_unit.id
            [/filter_adjacent]
            [and]
            ability=steppe_oversight
            [or]
            ability=steppe_khagans_presense
            [/or]
            [/and]
        [not]
        [filter_wml]
        [status]
            petrified=yes
        [/status]
        [/filter_wml]
        [or]
           ability=steppe_captured
        [/or]
        [/not]
        [/filter]
        variable=steppe_overseer
        kill=no
    [/store_unit]
    [if]
    [variable]
        name=steppe_overseer.length
        greater_than=0
    [/variable]
    [then]

    {VARIABLE overseer_random_limit $steppe_overseer.length}
    {VARIABLE_OP overseer_random_limit sub 1}
    {RANDOM 0..$overseer_random_limit}

#since the array number is offset by one from the length (if there are 2 units, the length is 2, but the units are [0] and [1])

    {EXP_VALUE_CALC $unit.id tmp_overseer_exp} #calculate the killed unit's xp, if this doesn't work, change the event to last breath event
    {VARIABLE_OP tmp_overseer_exp multiply 0.33}
    {VARIABLE_OP tmp_overseer_exp round ceil}
    {VARIABLE_OP steppe_overseer[$random].experience add $tmp_overseer_exp}

    [unstore_unit]
        variable=steppe_overseer[$random]
        text=_"+$tmp_overseer_exp| exp"
#        red=0
#        green=0
#        blue=255
        find_vacant=no
    [/unstore_unit]

    [/then]
    [/if]
    {CLEAR_VARIABLE steppe_overseer}
    {CLEAR_VARIABLE overseer_random_limit}
    {CLEAR_VARIABLE tmp_overseer_exp}
[/event]
#enddef

#define ABILITY_OVERSIGHT NUMBER
    #sorta like leadership, but for slaves
#TODO: maybe change this from a flat amount to something that works like normal leadership (like 15% per level different)
    [leadership]
        id=steppe_oversight
        value={NUMBER}
        cumulative=no
        name=_"oversight "+{NUMBER}+"%"
        description= _"Adjacent ally slaves/disloyals deal {NUMBER}% more damage, and slaves cannot be freed regardless of level difference. Adjacent ally disloyal units no longer have a chance to betray you when defeated. Whenever an adjacent slave or disloyal kills an enemy, this unit gains exp equal to 33% of the exp from the kill (rounded up. If there are multiple overseers, the overseer who gets the exp is chosen randomly). Doesn't work if the unit is captured."
        affect_self=no
        [filter]
        [not]
            ability=steppe_captured
        [/not]
        [/filter]
        [affect_adjacent]
            [filter]
                ability=steppe_slave
                [or]
                    ability=steppe_disloyal
                [/or]
#                formula="level <= other.level"
            [/filter]
        [/affect_adjacent]
    [/leadership]
    #note: the "exp on slave kill" code is in the eventloader, for the sake of making the ability modifiable via object
#enddef

#define WEAPON_SPECIAL_CONVERT_SLAVES
    [dummy]
        id=convert_slaves
        name=_"convert slaves"
        description=_"Works like enslave, except only on either freed recruitable slaves, or currently enslaved enemy slaves (converts them to your side instead)."
    [/dummy]
    [/specials]
[/attack]
[event]
    name=last breath
    id=steppe_slave_convert_event
    first_time_only=no
    [filter]
    ability=steppe_slave
    [/filter]
   
    [filter_second_attack]
        special=convert_slaves
    [/filter_second_attack]

    [capture_village]
    x,y=$unit.x,$unit.y
    side=$second_unit.side
    [/capture_village]

    {VARIABLE unit.hitpoints $unit.max_hitpoints}
    {VARIABLE_OP unit.hitpoints multiply 0.5}
    {VARIABLE unit.side $second_unit.side}
    [if]
        [variable]
            name=unit.gender
            equals=female
        [/variable]

        [then]
            [set_variable]
                name=tmp_convert_text
                value= _ "female^Converted!"
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=tmp_convert_text
                value= _ "Converted!"
            [/set_variable]
        [/else]
    [/if]
    [unstore_unit]
        variable=unit
        text=$tmp_convert_text
        red=255
        green=126
        blue=0
        find_vacant=no
    [/unstore_unit]
    {CLEAR_VARIABLE tmp_convert_text}
    {MODIFY_UNIT id=$unit.id moves 0}
    {MODIFY_UNIT id=$unit.id attacks_left 0}
    [fire_event]
        name=steppe_customevent_changeside
        [primary_unit]
            id=$unit.id
        [/primary_unit]
    [/fire_event]
[/event]

[event]
    name=last breath
    id=steppe_slave_convert_event2
    first_time_only=no
    [filter]
    ability=steppe_slave_freed
    [/filter]
   
    [filter_second_attack]
        special=convert_slaves
    [/filter_second_attack]

    {MODIFY_UNIT id=$unit.id moves 0}
    {MODIFY_UNIT id=$unit.id attacks_left 0}
    [store_unit]
        [filter]
            id=$unit.id
#            side=$unit.side
        [/filter]

        variable=UNIT_store
        kill=no
    [/store_unit]
    {ENSLAVE_FOREACH $second_unit.side}
    [fire_event]
        name=steppe_customevent_changeside
        [primary_unit]
            id=$unit.id
        [/primary_unit]
    [/fire_event]
    [fire_event]
        name=steppe_customevent_enslave
        [primary_unit]
            id=$unit.id
        [/primary_unit]
    [/fire_event]
    [/event]
    [+attack]
    [+specials]
#enddef

#define STEPPE_DISLOYAL_LEVELCALC UNITVAR X Y
    {TOTAL_LEVEL_CALC (
    [filter_side]
    [enemy_of]
        side=${UNITVAR}.side
    [/enemy_of]
    [/filter_side]
    [not]
            ability=steppe_captured
            [or]
              level=0
            [/or]
            [or]
                ability_type_active=hides
                [not]
                  status=uncovered
                [/not]
            [/or]            
            [or]
                [filter_wml]
                [status]
                    petrified=yes
                [/status]
                [/filter_wml]
            [/or]
    [/not]
    [filter_location]
        x,y={X},{Y}
        radius=2
    [/filter_location]
    ) enemy_points a}

    {TOTAL_LEVEL_CALC (
    [filter_side]
    [allied_with]
        side=${UNITVAR}.side
    [/allied_with]
    [/filter_side]
    [not]
            ability=steppe_captured
            [or]
              level=0
            [/or]
            [or]
#workaround for the inconsistent disloyal unit level calculation
              id=$unit.id
            [/or]
            [or]
                ability_type_active=hides
                [not]
                  status=uncovered
                [/not]
            [/or]            
            [or]
                [filter_wml]
                [status]
                    petrified=yes
                [/status]
                [/filter_wml]
            [/or]
    [/not]
    [filter_location]
        x,y={X},{Y}
        radius=3
    [/filter_location]
    ) khaganate_points a}

#    [chat]
#       speaker=_"Debug"
#       message= _ "Enemy points: $enemy_points|. Khaganate points: $khaganate_points|."
#    [/chat]
#enddef

#define ABILITY_STEPPE_DISLOYAL
#the unit has a chance to defect
    [dummy]
        id=steppe_disloyal
        name=_"disloyal"
        description= _"This unit is disloyal, and is prone to desertion. Upon being defeated, while the level of nearby enemies (in a 2-tile radius from the unit. Units that are enemies of both the attacker and the disloyal unit, as well as invisible units, do not count.) is higher than that of the nearby allies (in a 3-tile radius from the unit)), they will join the enemy team. After joining the enemy, their hitpoints are reset to 33% of their max HP, but they lose half of their current experience. Also, upon deserting, they move to the enemy side's leader. The deserter cannot move/attack on the same turn as they deserted on.

        If their side's leader dies, disloyal units automatically desert to the enemy. If the disloyal unit is a leader, they lose their ability to recruit."
        [filter]
        [not]
            trait=loyal
        [/not]
        [/filter]
        [/dummy]
     # wmlxgettext: [abilities]
[/abilities]
[event]
    name=last breath
    id=steppe_khaganate_disloyal_ability
    first_time_only=no
    [filter]
        ability=steppe_disloyal
        [not]
        [filter_location]
            [filter]
                ability=steppe_oversight
            [filter_side]
            [allied_with]
                side=$unit.side
            [/allied_with]
            [/filter_side]
            [not]
                ability=steppe_captured
            [/not]
            [/filter]
            radius=1
            [or]
            [filter]
                ability=steppe_khagans_presense
            [filter_side]
            [allied_with]
                side=$unit.side
            [/allied_with]
            [/filter_side]
            [not]
                ability=steppe_captured
            [/not]
            [/filter]
            radius=2
            [/or]
        [/filter_location]
        [or]
            ability=steppe_slave
        [/or]
        [or]
            ability=steppe_notrigger_onkill_abilities
        [/or]
        [or]
            trait=loyal
        [/or]
        [/not]
    [/filter]
    [filter_second_attack]
    [not]
       special=steppe_enslave
       [or]
       special=steppe_capture
       [/or]
    [/not]
    [/filter_second_attack]
    {VARIABLE enemy_points 0}
#    {VARIABLE khaganate_points 0}
#workaround for the inconsistent disloyal unit level calculation
    {VARIABLE khaganate_points $unit.level}

    {STEPPE_DISLOYAL_LEVELCALC unit $x1 $y1}

    {IF_VAR enemy_points greater_than $khaganate_points (
    [then]

    {MODIFY_UNIT id=$unit.id hitpoints 0}
        [heal_unit]
            [filter]
                id=$unit.id
            [/filter]
            amount="$($unit.max_hitpoints| / 3)"
            animate=yes
            restore_statuses=no
        [/heal_unit]
    {MODIFY_UNIT id=$unit.id side $second_unit.side}
    {MODIFY_UNIT id=$unit.id experience "$($unit.experience| / 2)"}#halving unit experience
    {MODIFY_UNIT id=$unit.id moves 0}
    {MODIFY_UNIT id=$unit.id attacks_left 0}
#in case the deserting unit is a leader:
    {MODIFY_UNIT id=$unit.id canrecruit no}
    [capture_village]
    x,y=$unit.x,$unit.y
    side=$second_unit.side
    [/capture_village]
        [sound]
            name=horn-signals/horn-1.ogg
        [/sound]
#redundant, as the event is already triggered in the location calculator
#    [fire_event]
#        name=steppe_customevent_changeside
#        [primary_unit]
#            id=$unit.id
#        [/primary_unit]
#    [/fire_event]

#move the traitor unit to the enemy side's leader

        [store_unit]
            [filter]
                side=$second_unit.side
                canrecruit=yes
            [/filter]
            variable=steppe_disloyal_leader
            kill=no
        [/store_unit]

#        [chat]
#            message=_"$unit.id, $steppe_disloyal_leader.id"
#        [/chat]

        {DISLOYAL_STORE_LOCATION $unit.id}
        {CLEAR_VARIABLE steppe_disloyal_leader}
    [/then])}

    {CLEAR_VARIABLE enemy_points}
    {CLEAR_VARIABLE khaganate_points}
[/event]
[+abilities]
#enddef



#define ABILITY_STEPPE_PUNISHER
    [leadership]
        id=steppe_punisher
        value=-25
        cumulative=no
        name=_"punisher"
        description=_"Adjacent enemy slaves (or freed slaves) deal 25% less damage, and adjacent enemy disloyal units deal 15% less damage."
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            [filter]
                ability=steppe_slave
                [or]
                ability=steppe_slave_freed
                [/or]
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=steppe_punisher2
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            [filter]
                ability=steppe_disloyal
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_NIGHTFORM TYPE
    [dummy]
        id=steppe_nightform
        name=_"night form"
        description=_"This unit turns into their night form variation at dusk/night, and transforms back at dawn/day."
    [/dummy]

     # wmlxgettext: [abilities]
[/abilities]
    [event]
    name=new turn,side turn,steppe_customevent_changeside,recruit,recall
    id=khaganate_nightform{TYPE}
    first_time_only=no

    [store_unit]
        [filter]
            type={TYPE}
            [filter_location]
                time_of_day=chaotic
                [or]
                time_of_day_id=dusk
                [/or]
            [/filter_location]
            [not]
            [filter_wml]
            [status]
                petrified=yes
            [/status]
            [/filter_wml]
            [/not]
        [/filter]
        variable=steppe_nightform
        kill=no
    [/store_unit]
    [if]
    [variable]
        name=steppe_nightform.length
        greater_than=0
    [/variable]
    [then]
    {FOREACH steppe_nightform i}
    [animate_unit]
        flag=nightform
        [filter]
            id=$steppe_nightform[$i].id
        [/filter]
    [/animate_unit]
    {TRANSFORM_UNIT id=$steppe_nightform[$i].id ({TYPE}_Night)}
    {NEXT i}
    {CLEAR_VARIABLE steppe_nightform}
    [/then]
    [/if]

    [store_unit]
        [filter]
            type={TYPE}_Night
            side=$side_number
            [filter_location]
                time_of_day=lawful
                [or]
                time_of_day_id=dawn
                [not]
                time_of_day=chaotic
                [/not]
                [/or]
            [/filter_location]
            [not]
            [filter_wml]
            [status]
                petrified=yes
            [/status]
            [/filter_wml]
            [/not]
        [/filter]
        variable=steppe_dayform
        kill=no
    [/store_unit]
    [if]
    [variable]
        name=steppe_dayform.length
        greater_than=0
    [/variable]
    [then]
    {FOREACH steppe_dayform i}
    [animate_unit]
        flag=nightform_day
        [filter]
            id=$steppe_dayform[$i].id
        [/filter]
    [/animate_unit]
    {TRANSFORM_UNIT id=$steppe_dayform[$i].id ({TYPE})}
    {NEXT i}
    {CLEAR_VARIABLE steppe_dayform}
    [/then]
    [/if]

    [/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_STEPPE_BLOODMAGIC
    [disable]
        id=steppe_bloodmagic
        name=_"blood magic"
        description=_"This attack can't be used on non-living units."
        [filter_opponent]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]              
        [/filter_opponent]
    [/disable]
#enddef

#define WEAPON_SPECIAL_STEPPE_FINISHOFF
[damage]
    id=steppe_finishoff
    name=_"finish off"
    description=_"This attack deals more damage the less HP the opponent has: 25% more if below 70% HP, 50% more if below 50% HP, and 100% more if the opponent is below 30% HP. Additionally, the attack has +10% chance to hit if the opponent is below 30% HP, +20% if below 20% HP, and +30% if below 10% HP."
[/damage]
[damage]
    id=steppe_finishoff1
    multiply=1.25
    apply_to=self
    [filter_opponent]
    formula=($this_unit.hitpoints < $this_unit.max_hitpoints * 0.7)
    [and]
        formula=($this_unit.hitpoints >= $this_unit.max_hitpoints * 0.5)
    [/and]
    [/filter_opponent]
[/damage]
[damage]
    id=steppe_finishoff2
    multiply=1.5
    apply_to=self
    [filter_opponent]
    formula=($this_unit.hitpoints < $this_unit.max_hitpoints * 0.5)
    [and]
        formula=($this_unit.hitpoints >= $this_unit.max_hitpoints * 0.3)
    [/and]
    [/filter_opponent]
[/damage]
[damage]
    id=steppe_finishoff3
    multiply=2
    apply_to=self
    [filter_opponent]
    formula=($this_unit.hitpoints < $this_unit.max_hitpoints * 0.3)
    [/filter_opponent]
[/damage]
[chance_to_hit]
    id=steppe_finishoff_chance1
    add=10
    cumulative=yes
#    active_on=offense
    [filter_opponent]
    formula=($this_unit.hitpoints < $this_unit.max_hitpoints * 0.3)
    [and]
        formula=($this_unit.hitpoints >= $this_unit.max_hitpoints * 0.2)
    [/and]
    [/filter_opponent]
[/chance_to_hit]
[chance_to_hit]
    id=steppe_finishoff_chance2
    add=20
    cumulative=yes
#    active_on=offense
    [filter_opponent]
    formula=($this_unit.hitpoints < $this_unit.max_hitpoints * 0.2)
    [and]
        formula=($this_unit.hitpoints >= $this_unit.max_hitpoints * 0.1)
    [/and]
    [/filter_opponent]
[/chance_to_hit]
[chance_to_hit]
    id=steppe_finishoff_chance3
    add=30
    cumulative=yes
#    active_on=offense
    [filter_opponent]
    formula=($this_unit.hitpoints < $this_unit.max_hitpoints * 0.1)
    [/filter_opponent]
[/chance_to_hit]
#enddef

#define WEAPON_SPECIAL_STEPPE_PARALYZED
    [attacks]
        id=steppe_paralyzed
        name=_"paralyzed"
        description=_"This attack's strikes are reduced to 1."
        value=1
        [filter_base_value]
            greater_than=1 #this is so it doesn't accidentally break any 0-strike attacks that are meant to be that way              
        [/filter_base_value]
    [/attacks]
#enddef

#define WEAPON_SPECIAL_STEPPE_PARALYZE
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [dummy]
        id=steppe_paralyze
        name=_"paralyze"
        description=_"This attack sets the opponent's number of strikes on all attacks to 1, and defense on all terain by 10%, until the enemy's next turn. Does not work on non-living units."
    [/dummy]

[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=attacker_hits
    id=steppe_paralyze_event1
    first_time_only=no

    [filter_attack]
        special=steppe_paralyze
    [/filter_attack]

    [filter_second]
        [not]
            [filter_wml]
                [status]
                    paralyzed="yes"
                [/status]
                [or]
                [status]
                    not_living="yes"
                [/status]
                [/or]
            [/filter_wml]
            [or]
                ability=steppe_paralyzed
            [/or]
        [/not]
    [/filter_second]

#    [chat]
#        message=_"paralyze event triggered"
#    [/chat]

    {VARIABLE second_unit.status.paralyzed yes}
    [if]
        [variable]
            name=second_unit.gender
            equals=female
        [/variable]

        [then]
            [set_variable]
                name=tmp_paralyzed_text
                value= _ "female^paralyzed"
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=tmp_paralyzed_text
                value= _ "paralyzed"
            [/set_variable]
        [/else]
    [/if]

    [unstore_unit]
        variable=second_unit
        find_vacant=no
        text=$tmp_paralyzed_text
        {COLOR_HARM}
    [/unstore_unit]

    [object]
        silent=yes
        duration=turn#turn end

        [filter]
            id=$second_unit.id
        [/filter]

        [effect]
            apply_to=image_mod
            add="CS(60,-30,-20)"
        [/effect]
        [effect]
            apply_to=attack
            [set_specials]
                mode=append
                {WEAPON_SPECIAL_STEPPE_PARALYZED}
            [/set_specials]
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
              [dummy]
                 id=steppe_paralyzed
              [/dummy]
            [/abilities]
        [/effect]
        {STEPPE_DEFENSE_MPCOST_CHANGE 10 0}#reduces defense on all terrain by 10%
    [/object]

    [clear_variable]
        name=tmp_paralyzed_text
    [/clear_variable]
[/event]

[event]
    name=defender_hits
    id=steppe_paralyze_event2
    first_time_only=no

    [filter_second_attack]
        special=steppe_paralyze
    [/filter_second_attack]

    [filter]
        [not]
            [filter_wml]
                [status]
                    paralyzed="yes"
                [/status]
                [or]
                [status]
                    not_living="yes"
                [/status]
                [/or]
            [/filter_wml]
            [or]
                ability=steppe_paralyzed
            [/or]
        [/not]
    [/filter]

    {VARIABLE unit.status.paralyzed yes}
    [if]
        [variable]
            name=unit.gender
            equals=female
        [/variable]

        [then]
            [set_variable]
                name=tmp_paralyzed_text
                value= _ "female^paralyzed"
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=tmp_paralyzed_text
                value= _ "paralyzed"
            [/set_variable]
        [/else]
    [/if]

    [unstore_unit]
        variable=unit
        find_vacant=no
        text=$tmp_paralyzed_text
        {COLOR_HARM}
    [/unstore_unit]

    [object]
        silent=yes
        duration=turn#turn end

        [filter]
            id=$unit.id
        [/filter]

        [effect]
            apply_to=image_mod
            add="CS(60,-30,-20)"
        [/effect]
        [effect]
            apply_to=attack
            [set_specials]
                mode=append
                {WEAPON_SPECIAL_STEPPE_PARALYZED}
            [/set_specials]
        [/effect]
        [effect]
            apply_to=new_ability
            [abilities]
              [dummy]
                 id=steppe_paralyzed
              [/dummy]
            [/abilities]
        [/effect]
        {STEPPE_DEFENSE_MPCOST_CHANGE 10 0}#reduces defense on all terrain by 10%
    [/object]

    [clear_variable]
        name=tmp_paralyzed_text
    [/clear_variable]
[/event]

[event]
    name=turn refresh
    id=steppe_paralyze_event3
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [status]
                    paralyzed=yes
                [/status]
            [/filter_wml]
        [/filter]
        variable=paralyzed
    [/store_unit]

    {FOREACH paralyzed i}
        {CLEAR_VARIABLE paralyzed[$i].status.paralyzed}

        [unstore_unit]
            variable=paralyzed[$i]
        [/unstore_unit]
        [object]
            silent=yes
            duration=turn
            sort=potion-like

            [filter]
                id=$paralyzed[$i].id
            [/filter]

#            [effect]
#                apply_to=image_mod
#                add="CS(-40,-40,0)"
#            [/effect]
        [/object]
    {NEXT i}

    {CLEAR_VARIABLE paralyzed}
[/event]
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define ABILITY_STEPPE_KHAGANS_PRESENSE
    [leadership]
        id=steppe_khagans_presense
        value=15
        cumulative=no
        name=_"khagan's presence"
        description= _"Adjacent ally khaganate units (except other units with this ability) deal 15% more damage and adjacent slaves/disloyals deal 33% more damage. Slaves in a 2-tile radius cannot be freed regardless of level difference. Also, ally disloyal units in a 2-tile radius no longer have a chance to betray you when defeated. Whenever an adjacent slave kills an enemy, this unit gains exp equal to 33% of the exp from the kill (rounded up. If there are multiple overseers, the overseer who gets the exp is chosen randomly). Doesn't work if the unit is captured."
        affect_self=no
        [affect_adjacent]
            [filter]
                ability=khaganatefaction
#                formula="level <= other.level"
                [or]
                   type=Khaganate_Sentinel,Khaganate_Marksman
                [/or]
                [not]
                   ability=steppe_khagans_presense
                [/not]
            [/filter]
        [/affect_adjacent]
        [filter]
        [not]
            ability=steppe_captured
        [/not]
        [/filter]
    [/leadership]
    [leadership]
        id=steppe_khagans_presense2
        value=33
        cumulative=no
        affect_self=no
        [affect_adjacent]
            [filter]
                ability=steppe_slave
                [or]
                    ability=steppe_disloyal
                [/or]
            [/filter]
        [/affect_adjacent]
        [filter]
        [not]
            ability=steppe_captured
        [/not]
        [/filter]
    [/leadership]
#enddef