#textdomain wesnoth-gse

#define ABILITY_MANDATEFACTION
    [dummy]
        id=mandatefaction
    [/dummy]
#enddef

##define MANDATE_CLEAR_TUNNELVAR_BY_ID ID
##using the {FOREACH} macro instead of [foreach], since this deletes an array item, something the [foreach] tag does not permit
#{FOREACH mandate_tunnels_information tunnel_index}
#        {IF_VAR mandate_tunnels_information[$tunnel_index].id equals {ID} (
#        [then]
#            {CLEAR_VARIABLE mandate_tunnels_information[$tunnel_index]}
#            {VARIABLE_OP tunnel_index sub 1}#this is to fix weirdness when something in an array is deleted
#        [/then]
#        )}
#{NEXT tunnel_index}
##enddef

#define ABILITY_TUNNELER RADIUS
    [tunneler]
        id=tunneler{RADIUS}
#        name= _ "abyssal rift"+" {RADIUS}"
        name= _ "tunneler"+" {RADIUS}"
        description= _ "This unit allows allied units to teleport between units with this ability, as long as the second tunneler is within the first tunneler's range. The ability's range can be checked via a rightclick menu on units with this ability."
        radius={RADIUS}#this is so range can be easily checked by events
    [/tunneler]
    [dummy]
        id=abyssal_rift_filter#for filtering
    [/dummy]
    #note: the recruitment code is handled in the eventloader
    # wmlxgettext: [abilities]
[/abilities]
[event]
    name=die
    id=steppe_mandate_tunneler{RADIUS}_clear_on_death
    first_time_only=no
    [filter]
        ability=tunneler{RADIUS}
    [/filter]
#    {MANDATE_CLEAR_TUNNELVAR_BY_ID $unit.id}
    [tunnel]
    id=tunneler{RADIUS}$unit.id|
    delayed_variable_substitution=no
    remove=yes
    [/tunnel]
[/event]
[event]
    name=unit placed,post advance#unit placed,moveto
    id=steppe_mandate_tunneler{RADIUS}_create_tunnel
    first_time_only=no
    [filter]
        ability=tunneler{RADIUS}
    [/filter]
#    {MANDATE_CLEAR_TUNNELVAR_BY_ID $unit.id}
    [tunnel]
    id=tunneler{RADIUS}$unit.id|
    delayed_variable_substitution=no
    remove=yes
    [/tunnel]
    [tunnel]
    id=tunneler{RADIUS}$unit.id|
    bidirectional=no
    allow_vision=no#if an allied worm is under fog/shroud, units can't teleport to it
    delayed_variable_substitution=no#important, as $teleport unit is unreliable for what is necessary here
    [filter]
       [filter_side]
       [allied_with]
          side=$side_number
       [/allied_with]
       [/filter_side]
       [not]
           id=$unit.id#the worm can't use its own tunnels
       [/not]
    [/filter]
    [source]
        [filter]
            id=$unit.id
            ability=tunneler{RADIUS}
        [/filter]
#        x,y=$x1,$y1
        radius=1
    [/source]
    [target]
    [filter]
       ability=abyssal_rift_filter
       [not]
           id=$unit.id
       [/not]
       [filter_side]
       [allied_with]
          side=$side_number
       [/allied_with]
       [/filter_side]
#       side=$side_number
       [filter_location]
            [filter]
                id=$unit.id
            [/filter]
#            x,y=$x1,$y1
            radius={RADIUS}
       [/filter_location]
    [/filter]
    radius=1
    [/target]
    [/tunnel]
    #todo: make the variable cleared (by id) when a tunnel is removed for a specific unit
#    [set_variables]
#        name=mandate_tunnels_information
#        mode=append
#        [value]
#            id=$unit.id
#            x=$x1
#            y=$y1
#        [/value]
#    [/set_variables]
[/event]
#[event]
#    name=turn refresh
#    id=steppe_mandate_update_tunnels
#    first_time_only=no
#[/event]
[event]
    name=victory
    id=steppe_mandate_victory_reset_tunnel_vars
    first_time_only=no
    {CLEAR_VARIABLE mandate_tunnels_information}
[/event]
[+abilities]
    # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_SECONDSTRIKE
#note: ability may cause crashes when dealing with enemy firststrikes
    [firststrike]
        id=steppe_secondstrike
        name=_"secondstrike"
        description=_"This unit always strikes second with this attack, even if they are attacking."
        apply_to=opponent
        [filter_opponent]
            [filter_weapon]
                [not]
                    special_id=steppe_secondstrike
                    [or]
                        special_id=firststrike
                    [/or]
                [/not]
            [/filter_weapon]
        [/filter_opponent]
    [/firststrike]
#enddef

#define ABILITY_DAUNTLESS
    [resistance]
        id=steppe_dauntless
        multiply=2
        max_value=50
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        name= _ "dauntless"
        female_name= _ "female^dauntless"
        description= _ "This unitâ€™s resistances are doubled, up to a maximum of 50%, when attacking. Vulnerabilities are not affected."
#        special_note={INTERNAL:SPECIAL_NOTES_STEADFAST}
        affect_self=yes
        active_on=offense
    [/resistance]
#enddef

#define WEAPON_SPECIAL_STEPPE_EXPLOSION PERCENT MULT
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=steppe_explosion{PERCENT}
        name=_"explosion"+" {PERCENT}%"
        description=_"When this attack hits, units adjacent to the target unit are damaged by"+" {PERCENT}% "+" (rounded down) of this attack's damage."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attacker_hits
    id=steppe_explosion{PERCENT}
    first_time_only=no
    [filter_attack]
        special_id=steppe_explosion{PERCENT}
    [/filter_attack]

    {VARIABLE tmp_aoedmg $weapon.damage}
    {VARIABLE_OP tmp_aoedmg multiply {MULT}}
    {VARIABLE_OP tmp_aoedmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$unit.side
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [or]
                    id=$second_unit.id
                [/or]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {FOREACH bystander i}
                [if]
                    [have_unit]
                        find_in=expfreeze
                        x,y=$bystander[$i].x,$bystander[$i].y
                    [/have_unit]
                    [else]
                    [fire_event]
                        name=attack
                        [primary_unit]
                            id=$unit.id
                        [/primary_unit]
                        [secondary_unit]
                            id=$bystander[$i].id
                        [/secondary_unit]
                    [/fire_event]
                    [store_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
                        variable=expfreeze
                        mode=append
                    [/store_unit]
                    [/else]
                [/if]
                [harm_unit]
                    [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                        [filter_side]
                            [enemy_of]
                                side=$unit.side
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]
                    [primary_attack]
                        name=$weapon.name
                        type=$weapon.type
                        range=$weapon.range
                    [/primary_attack]
                    amount=$tmp_aoedmg
                    damage_type=$weapon.type
                    alignment=$unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
                {VARIABLE damage_inflicted $tmp_aoedmg}
                [fire_event]
                    name=attacker_hits
                    [primary_unit]
                        id=$unit.id
                    [/primary_unit]
                    [secondary_unit]
                        id=$bystander[$i].id
                    [/secondary_unit]
                    [primary_weapon]
                        name=$weapon.name
                        type=$weapon.type
                        damage=$weapon.damage
                        range=$weapon.range
                    [/primary_weapon]
                [/fire_event]
    {NEXT i}
    {CLEAR_VARIABLE tmp_aoedmg}
[/event]

[event]
    name=defender_hits
    id=steppe_explosion2{PERCENT}
    first_time_only=no
    [filter_second_attack]
        special_id=steppe_explosion{PERCENT}
    [/filter_second_attack]

    {VARIABLE tmp_expfreeze_defense yes}#the expfreeze event checks this variable

    {VARIABLE tmp_aoedmg $second_weapon.damage}
    {VARIABLE_OP tmp_aoedmg multiply {MULT}}
    {VARIABLE_OP tmp_aoedmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$second_unit.side
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [or]
                    id=$unit.id
                [/or]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {FOREACH bystander i}
                [if]
                    [have_unit]
                        find_in=expfreeze
                        x,y=$bystander[$i].x,$bystander[$i].y
                    [/have_unit]
                    [else]
                    [fire_event]
                        name=attack
                        [primary_unit]
                            id=$second_unit.id
                        [/primary_unit]
                        [secondary_unit]
                            id=$bystander[$i].id
                        [/secondary_unit]
                    [/fire_event]
                    [store_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
                        variable=expfreeze
                        mode=append
                    [/store_unit]
                    [/else]
                [/if]
                [harm_unit]
                    [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                        [filter_side]
                            [enemy_of]
                                side=$second_unit.side
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x2,$y2
                    [/filter_second]
                    [primary_attack]
                        name=$second_weapon.name
                        type=$second_weapon.type
                        range=$second_weapon.range
                    [/primary_attack]
                    amount=$tmp_aoedmg
                    damage_type=$second_weapon.type
                    alignment=$second_unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
                {VARIABLE damage_inflicted $tmp_aoedmg}
                [fire_event]
                    name=defender_hits
                    [primary_unit]
                        id=$bystander[$i].id
                    [/primary_unit]
                    [secondary_unit]
                        id=$unit.id
                    [/secondary_unit]
                    [primary_weapon]
                        name=$second_weapon.name
                        type=$second_weapon.type
                        damage=$second_weapon.damage
                        range=$second_weapon.range
                    [/primary_weapon]
                [/fire_event]
    {NEXT i}
    {CLEAR_VARIABLE tmp_aoedmg}
[/event]

{STEPPE_EXPFREEZE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

##define ABILITY_STEPPE_SHADOW_DASH_UNUSED RADIUS
#    [teleport]
#        id=steppe_shadow_dash{RADIUS}
#        name= _ "shadow dash"+" {RADIUS}"
#        description= _ "TODO"
#        [tunnel]
#            id=steppe_shadow_dash{RADIUS}
#            allow_vision=no
#            bidirectional=no
#            [source]
#                [filter]
#                    [filter_side]
#                        [enemy_of]
#                            side=$teleport_unit.side
#                        [/enemy_of]
#                    [/filter_side]
#                [/filter]
#                radius={RADIUS}
#            [/source]
#
#            [target]
#                [filter_adjacent_location]
#                    [filter]
#                        [filter_side]
#                            [enemy_of]
#                                side=$teleport_unit.side
#                            [/enemy_of]
#                        [/filter_side]
#                    [/filter]
##                    [and]
##                        [filter]
##                            id=$teleport_unit.id
##                        [/filter]
##                        radius={RADIUS}
##                    [/and]
#                [/filter_adjacent_location]
#            [/target]
#
#            [filter]
#                ability=steppe_shadow_dash{RADIUS}
#            [/filter]
#        [/tunnel]
#    [/teleport]
##enddef

#define ABILITY_STEPPE_SHADOW_DASH RADIUS
    [teleport]
        id=steppe_shadow_dash{RADIUS}
        name= _ "shadow dash"+" {RADIUS}"
        description= _ "While this unit has full moves, this unit may teleport to any tile in a"+" {RADIUS}"+_"-tile radius from the unit's current location."
        [tunnel]
            id=steppe_shadow_dash{RADIUS}
            allow_vision=no
            bidirectional=no
            [source]
            [/source]

            [target]
                [filter]
                    id=$teleport_unit.id
                [/filter]
                radius={RADIUS}
                #TODO: add [filter_radius] here (with [not] terrain=<impassable terrain>), so the ability can't be abused to jump over walls
            [/target]

            [filter]
                ability=steppe_shadow_dash{RADIUS}
                formula=($this_unit.moves = $this_unit.max_moves)
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#define STEPPE_METAMORPH_ADD_ATTACK FILTER ATTACK_NAME ATTACK_PARAMS PER_LEVEL_EFFECTS PER_LEVEL_EFFECTS2
    [if]
    [have_unit]
#        id=$this_item.id
        {FILTER}
        [filter_adjacent]
            id=$tmp_metamorpher.id
        [/filter_adjacent]
        [filter_side]
            [allied_with]
                side=$side_number
            [/allied_with]
        [/filter_side]
    [/have_unit]
    [and]
    [have_unit]
        id=$tmp_metamorpher.id
        [not]
        [has_attack]
            name={ATTACK_NAME}
        [/has_attack]
        [/not]
    [/have_unit]
    [/and]
    [then]
    [object]
        silent=yes
        duration=turn
        [filter]
            id=$tmp_metamorpher.id
        [/filter]
        [effect]
            apply_to=new_attack
            name={ATTACK_NAME}
            {ATTACK_PARAMS}
        [/effect]
    [/object]
    [object]
        silent=yes
        duration=turn
        [filter]
            id=$tmp_metamorpher.id
        [/filter]
        [effect]
            apply_to=attack
            name={ATTACK_NAME}
            {PER_LEVEL_EFFECTS}
            times=per level
        [/effect]
        [effect]
            apply_to=attack
            name={ATTACK_NAME}
            {PER_LEVEL_EFFECTS2}
            times=per level
        [/effect]
    [/object]
    [/then]
    [/if]
#enddef

#unused for now:
#define ABILITY_STEPPE_METAMORPH
    [dummy]
        id=steppe_metamorph
        name= _ "metamorph"
        description= _ "TODO"
    [/dummy]
    #note: the recruitment code is handled in the eventloader
    # wmlxgettext: [abilities]
[/abilities]
[event]
    name=turn refresh
    id=steppe_mandate_metamorph
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            ability=steppe_metamorph
        [not]
        [filter_wml]
        [status]
            petrified=yes
        [/status]
        [/filter_wml]
        [/not]
        [/filter]
        variable=steppe_metamorpher
        kill=no
    [/store_unit]
    [foreach]
        array=steppe_metamorpher
        index_var=i
        [do]

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$this_item.x,$this_item.y
            [/filter_adjacent]
            [filter_side]
                [allied_with]
                    side=$side_number
                [/allied_with]
            [/filter_side]
            #no filter against petrifying here, since terracotta warriors can imitate
        [/filter]
        variable=metamorph_allies
        kill=no
    [/store_unit]

    [if]
    {VARIABLE_CONDITIONAL metamorph_allies.length greater_than 0}
    [then]

    [store_unit]
        [filter]
            id=$this_item.id
        [/filter]
        variable=tmp_metamorpher
        kill=no
    [/store_unit]

    [sound]
      name=terracotta-hit.ogg
    [/sound]

        {STEPPE_METAMORPH_ADD_ATTACK type_adv_tree=Mandate_Worm terracotta_bite (
        description=_"bite"
        icon=attacks/fangs-terracotta.png
        type=blade
        range=melee
        damage=2
        number=7
        [specials]
            {WEAPON_SPECIAL_SWARM}
        [/specials]
        ) (
        increase_damage=2
        ) ()}

        {STEPPE_METAMORPH_ADD_ATTACK type_adv_tree=Mandate_Mangus terracotta_flail (
        description= _"flail"
        icon=attacks/mace-and-chain-terracotta.png
        type=impact
        range=melee
        damage=7
        number=2
        ) (
        increase_damage=2
        ) (
        increase_damage=20%
        )}

        {STEPPE_METAMORPH_ADD_ATTACK type_adv_tree=Mandate_Jiangshi terracotta_touch (
        description= _"touch"
        icon=attacks/touch-dark.png
        type=arcane
        range=melee
        damage=2
        number=3
        [specials]
            {WEAPON_SPECIAL_DRAIN}
        [/specials]
        ) (
        increase_damage=2
        ) (
        increase_damage=15%
        )}

        {STEPPE_METAMORPH_ADD_ATTACK (
        type_adv_tree=Mandate_Kobold
        [not]
            type_adv_tree=Mandate_Chukonu
        [/not]
        ) terracotta_cannon (
        description=_"handcannon"
        icon=attacks/thunderstick-terracotta.png
        type=impact
        range=ranged
        damage=9
        number=1
        [specials]
            {WEAPON_SPECIAL_STEPPE_ATTACK_ONLY}
        [/specials]
        ) (
        increase_damage=4
        ) (
        increase_damage=15%
        )}

        {STEPPE_METAMORPH_ADD_ATTACK type_adv_tree=Mandate_Chukonu terracotta_crossbow (
        description=_"crossbow"
        icon=attacks/crossbow-undead.png
        type=pierce
        range=ranged
        damage=1
        number=4
        [specials]
#event isn't actually loaded from here, but since the ability requires a chukonu unit on the map, the ability events would have been loaded by now anyway
            {STEPPE_STACKING_DUMMY_SPECIAL _"arrow volley" 1}
            {WEAPON_SPECIAL_STEPPE_ATTACK_ONLY}
        [/specials]
        attack_weight=1.5
        ) (
        increase_damage=1
        increase_attacks=1
        ) ()}

        {STEPPE_METAMORPH_ADD_ATTACK type_adv_tree=Mandate_Jorogumo terracotta_entangle (
        description=_"entangle"
        icon=attacks/web-terracotta.png
        type=impact
        range=melee
        damage=4
        number=0
        [specials]
            {WEAPON_SPECIAL_SLOW}
        [/specials]
        ) (
        increase_damage=1
        increase_attacks=1
        ) ()}

    {CLEAR_VARIABLE metamorph_allies}
    {CLEAR_VARIABLE tmp_metamorpher}

    [/then]
    [/if]

        [/do]
    [/foreach]

[/event]
[+abilities]
    # wmlxgettext: [/abilities]
#enddef

#define EVENTLOADER_EVENTS_MANDATE
[event]
name=start
id=mandate_tunnelcalc_menu
first_time_only=no
[set_menu_item]
    id=mandate_tunnel_calculator
    description=_"calculate tunnel range"
    image="items/book2.png~CROP(21,23,27,24)~SCALE(20,20)"
    #This is to prevent the calculator from being shown to more than one player. IF THIS MENU CAUSES OOS, THIS SETTING IS THE PROBLEM:
    synced=no
    [show_if]
    [/show_if]
    [filter_location]
        [filter]
            ability=abyssal_rift_filter
#            side=$side_number
        [/filter]
    [/filter_location]
    [command]

    [store_unit]
        [filter]
           x,y=$x1,$y1
        [/filter]
        variable=tmp_unsync_unit
        kill=no
    [/store_unit]

    [store_locations]
        [filter]
            id=$tmp_unsync_unit.id
        [/filter]
        include_borders=no#otherwise causes weird bugs if the unit is close to the border
        radius=$tmp_unsync_unit.abilities.tunneler.radius
        variable=tmp_unsync_tunnelcalc_locs
    [/store_locations]

    [foreach]
        array=tmp_unsync_tunnelcalc_locs
        index_var=unsync_i#while the index var does reset according to the wiki, I'd rather not take risks, so am using a seperate variable for unsynced foreach just in case
        [do]
            [if]
            [have_unit]
                ability=abyssal_rift_filter
                x=$this_item.x
                y=$this_item.y
                [not]
                    id=$tmp_unsync_unit.id
                [/not]
            [/have_unit]
            [then]
            [item]
                x=$this_item.x
                y=$this_item.y
                name=steppe_mandate_calc_overlay
                image="misc/highlight-hex-green.png~O(80%)"
            [/item]
            [/then]
            [else]
            [item]
                x=$this_item.x
                y=$this_item.y
                name=steppe_mandate_calc_overlay
                image="misc/highlight-hex.png~O(80%)"
            [/item]
            [/else]
            [/if]
        [/do]
    [/foreach]

    [delay]
        time=7500
    [/delay]

    [remove_item]
        image=steppe_mandate_calc_overlay
    [/remove_item]

    [redraw][/redraw]

    {CLEAR_VARIABLE tmp_unsync_unit}
    {CLEAR_VARIABLE tmp_unsync_tunnelcalc_locs}

    [/command]
[/set_menu_item]
[/event]
#enddef

#define ABILITY_STEPPE_NOCTURNAL_REGENERATION VALUE
    [regenerate]
        value={VALUE}
        id=steppe_nocturnal_regen_{VALUE}
        name= _ "nocturnal regeneration"+" +"+{VALUE}
        description=_"The unit will heal itself some HP at night. If it is poisoned, it will remove the poison instead of healing."
        affect_self=yes
        poison=cured
        [filter_self]
            [filter_location]
                time_of_day=chaotic
            [/filter_location]
        [/filter_self]
    [/regenerate]
#enddef