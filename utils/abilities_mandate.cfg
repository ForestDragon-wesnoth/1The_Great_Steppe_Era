#textdomain wesnoth-gse

#define ABILITY_MANDATEFACTION
    [dummy]
        id=mandatefaction
    [/dummy]
#enddef

#define ABILITY_TUNNELER RADIUS
    [dummy]
        id=tunneler{RADIUS}
#        name= _ "abyssal rift"+" {RADIUS}"
        name= _ "tunneler"+" {RADIUS}"
        description= _ "This unit may allows allied units to teleport between units with this ability."
    [/dummy]
    [dummy]
        id=abyssal_rift_filter#for filtering
    [/dummy]
    #note: the recruitment code is handled in the eventloader
    # wmlxgettext: [abilities]
[/abilities]
[event]
    name=unit placed
    id=steppe_mandate_tunneler{RADIUS}
    first_time_only=no
    [tunnel]
    id=tunneler{RADIUS}
    bidirectional=no
    allow_vision=no#if an allied worm is under fog/shroud, units can't teleport to it
#    remove=yes
    [filter]
       side=$side_number
    [/filter]
    [source]
#    radius=1
    [filter]
       ability=tunneler{RADIUS}
       [not]
           id=$teleport_unit.id
       [/not]
       [filter_side]
       [allied_with]
          side=$side_number
       [/allied_with]
       [/filter_side]
    [/filter]
    [/source]
    [target]
    [filter]
       ability=abyssal_rift_filter
       [not]
           id=$teleport_unit.id
       [/not]
       [filter_side]
       [allied_with]
          side=$side_number
       [/allied_with]
       [/filter_side]
#       side=$side_number
       [filter_location]
            [filter]
              id=$teleport_unit.id
            [/filter]
            radius={RADIUS}
       [/filter_location]
    [/filter]
#    [and]
#    [filter]
#      id=$teleport_unit.id
#    [/filter]
#    radius={RADIUS}
#    [/and]
#    [and]
#    [filter]
#       ability=tunneler{RADIUS}
#       [not]
#           id=$teleport_unit.id
#       [/not]
#    [/filter]
#    radius={RADIUS}
#    [/and]
#    [and]
#        [filter]
#           ability=abyssal_rift_filter
#           [not]
#               id=$teleport_unit.id
#           [/not]
#           [filter_side]
#           [allied_with]
#              side=$side_number
#           [/allied_with]
#           [/filter_side]
#    #       side=$side_number
#        [/filter]
#    [/and]
    [/target]
    [/tunnel]
[/event]
[+abilities]
    # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_SECONDSTRIKE
#note: ability may cause crashes when dealing with enemy firststrikes
    [firststrike]
        id=steppe_secondstrike
        name=_"secondstrike"
        description=_"This unit always strikes second with this attack, even if they are attacking."
        apply_to=opponent
        [filter_opponent]
            [filter_weapon]
                [not]
                    special_id=steppe_secondstrike
                    [or]
                        special_id=firststrike
                    [/or]
                [/not]
            [/filter_weapon]
        [/filter_opponent]
    [/firststrike]
#enddef

#define ABILITY_DAUNTLESS
    [resistance]
        id=steppe_dauntless
        multiply=2
        max_value=50
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        name= _ "dauntless"
        female_name= _ "female^dauntless"
        description= _ "This unitâ€™s resistances are doubled, up to a maximum of 50%, when attacking. Vulnerabilities are not affected."
        special_note={INTERNAL:SPECIAL_NOTES_STEADFAST}
        affect_self=yes
        active_on=offense
    [/resistance]
#enddef


#define WEAPON_SPECIAL_STEPPE_EXPLOSION
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=steppe_explosion
        name=_"explosion"
        description=_"When this attack hits, units adjacent to the target unit are damaged by 50% (rounded down) of this attack's damage."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attacker_hits
    id=steppe_explosion
    first_time_only=no
    [filter_attack]
        special_id=steppe_explosion
    [/filter_attack]

    {VARIABLE tmp_aoedmg $weapon.damage}
    {VARIABLE_OP tmp_aoedmg multiply 0.5}
    {VARIABLE_OP tmp_aoedmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$unit.side
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [or]
                    id=$second_unit.id
                [/or]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {FOREACH bystander i}
                [if]
                    [have_unit]
                        find_in=expfreeze
                        x,y=$bystander[$i].x,$bystander[$i].y
                    [/have_unit]
                    [else]
                    [fire_event]
                        name=attack
                        [primary_unit]
                            id=$unit.id
                        [/primary_unit]
                        [secondary_unit]
                            id=$bystander[$i].id
                        [/secondary_unit]
                    [/fire_event]
                    [store_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
                        variable=expfreeze
                        mode=append
                    [/store_unit]
                    [/else]
                [/if]
                [harm_unit]
                    [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                        [filter_side]
                            [enemy_of]
                                side=$unit.side
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]
                    [primary_attack]
                        name=$weapon.name
                        type=$weapon.type
                        range=$weapon.range
                    [/primary_attack]
                    amount=$tmp_aoedmg
                    damage_type=$weapon.type
                    alignment=$unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
                {VARIABLE damage_inflicted $tmp_aoedmg}
                [fire_event]
                    name=attacker_hits
                    [primary_unit]
                        id=$unit.id
                    [/primary_unit]
                    [secondary_unit]
                        id=$bystander[$i].id
                    [/secondary_unit]
                    [primary_weapon]
                        name=$weapon.name
                        type=$weapon.type
                        damage=$weapon.damage
                        range=$weapon.range
                    [/primary_weapon]
                [/fire_event]
    {NEXT i}
    {CLEAR_VARIABLE tmp_aoedmg}
[/event]

[event]
    name=defender_hits
    id=steppe_explosion2
    first_time_only=no
    [filter_second_attack]
        special_id=steppe_explosion
    [/filter_second_attack]

    {VARIABLE tmp_expfreeze_defense yes}#the expfreeze event checks this variable

    {VARIABLE tmp_aoedmg $second_weapon.damage}
    {VARIABLE_OP tmp_aoedmg multiply 0.5}
    {VARIABLE_OP tmp_aoedmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$second_unit.side
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [or]
                    id=$unit.id
                [/or]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {FOREACH bystander i}
                [if]
                    [have_unit]
                        find_in=expfreeze
                        x,y=$bystander[$i].x,$bystander[$i].y
                    [/have_unit]
                    [else]
                    [fire_event]
                        name=attack
                        [primary_unit]
                            id=$second_unit.id
                        [/primary_unit]
                        [secondary_unit]
                            id=$bystander[$i].id
                        [/secondary_unit]
                    [/fire_event]
                    [store_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
                        variable=expfreeze
                        mode=append
                    [/store_unit]
                    [/else]
                [/if]
                [harm_unit]
                    [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                        [filter_side]
                            [enemy_of]
                                side=$second_unit.side
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x2,$y2
                    [/filter_second]
                    [primary_attack]
                        name=$second_weapon.name
                        type=$second_weapon.type
                        range=$second_weapon.range
                    [/primary_attack]
                    amount=$tmp_aoedmg
                    damage_type=$second_weapon.type
                    alignment=$second_unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
                {VARIABLE damage_inflicted $tmp_aoedmg}
                [fire_event]
                    name=defender_hits
                    [primary_unit]
                        id=$bystander[$i].id
                    [/primary_unit]
                    [secondary_unit]
                        id=$unit.id
                    [/secondary_unit]
                    [primary_weapon]
                        name=$second_weapon.name
                        type=$second_weapon.type
                        damage=$second_weapon.damage
                        range=$second_weapon.range
                    [/primary_weapon]
                [/fire_event]
    {NEXT i}
    {CLEAR_VARIABLE tmp_aoedmg}
[/event]

{STEPPE_EXPFREEZE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

##define ABILITY_STEPPE_SHADOW_DASH_UNUSED RADIUS
#    [teleport]
#        id=steppe_shadow_dash{RADIUS}
#        name= _ "shadow dash"+" {RADIUS}"
#        description= _ "TODO"
#        [tunnel]
#            id=steppe_shadow_dash{RADIUS}
#            allow_vision=no
#            bidirectional=no
#            [source]
#                [filter]
#                    [filter_side]
#                        [enemy_of]
#                            side=$teleport_unit.side
#                        [/enemy_of]
#                    [/filter_side]
#                [/filter]
#                radius={RADIUS}
#            [/source]
#
#            [target]
#                [filter_adjacent_location]
#                    [filter]
#                        [filter_side]
#                            [enemy_of]
#                                side=$teleport_unit.side
#                            [/enemy_of]
#                        [/filter_side]
#                    [/filter]
##                    [and]
##                        [filter]
##                            id=$teleport_unit.id
##                        [/filter]
##                        radius={RADIUS}
##                    [/and]
#                [/filter_adjacent_location]
#            [/target]
#
#            [filter]
#                ability=steppe_shadow_dash{RADIUS}
#            [/filter]
#        [/tunnel]
#    [/teleport]
##enddef

#define ABILITY_STEPPE_SHADOW_DASH RADIUS
    [teleport]
        id=steppe_shadow_dash{RADIUS}
        name= _ "shadow dash"+" {RADIUS}"
        description= _ "TODO"
        [tunnel]
            id=steppe_shadow_dash{RADIUS}
            allow_vision=no
            bidirectional=no
            [source]
            [/source]

            [target]
                [filter]
                    id=$teleport_unit.id
                [/filter]
                radius={RADIUS}
                #TODO: add [filter_radius] here (with [not] terrain=<impassable terrain>), so the ability can't be abused to jump over walls
            [/target]

            [filter]
                ability=steppe_shadow_dash{RADIUS}
                formula=($this_unit.moves = $this_unit.max_moves)
            [/filter]
        [/tunnel]
    [/teleport]
#enddef



#define EVENTLOADER_EVENTS_MANDATE
#enddef