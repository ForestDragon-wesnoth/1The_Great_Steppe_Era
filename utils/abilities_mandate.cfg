#textdomain wesnoth-gse

#define ABILITY_MANDATEFACTION
    [dummy]
        id=mandatefaction
    [/dummy]
#enddef

#define ABILITY_ABYSSAL_RIFT RADIUS
    [dummy]
        id=abyssal_rift{RADIUS}
        name= _ "abyssal rift"+" {RADIUS}"
        description= _ "This unit may allows allied units to teleport between units with this ability."
    [/dummy]
    [dummy]
        id=abyssal_rift_filter#for filtering
    [/dummy]
    #note: the recruitment code is handled in the eventloader
    # wmlxgettext: [abilities]
[/abilities]
[event]
    name=unit placed
    id=steppe_mandate_abyssal_rift{RADIUS}
    first_time_only=no
    [tunnel]
    id=abyssal_rift{RADIUS}
    bidirectional=no
    allow_vision=no#if an allied worm is under fog/shroud, units can't teleport to it
#    remove=yes
    [filter]
       side=$side_number
    [/filter]
    [source]
#    radius=1
    [filter]
       ability=abyssal_rift{RADIUS}
       [not]
           id=$teleport_unit.id
       [/not]
       [filter_side]
       [allied_with]
          side=$side_number
       [/allied_with]
       [/filter_side]
    [/filter]
    [/source]
    [target]
    [filter]
       ability=abyssal_rift_filter
       [not]
           id=$teleport_unit.id
       [/not]
       [filter_side]
       [allied_with]
          side=$side_number
       [/allied_with]
       [/filter_side]
#       side=$side_number
       [filter_location]
            [filter]
              id=$teleport_unit.id
            [/filter]
            radius={RADIUS}
       [/filter_location]
    [/filter]
#    [and]
#    [filter]
#      id=$teleport_unit.id
#    [/filter]
#    radius={RADIUS}
#    [/and]
#    [and]
#    [filter]
#       ability=abyssal_rift{RADIUS}
#       [not]
#           id=$teleport_unit.id
#       [/not]
#    [/filter]
#    radius={RADIUS}
#    [/and]
#    [and]
#        [filter]
#           ability=abyssal_rift_filter
#           [not]
#               id=$teleport_unit.id
#           [/not]
#           [filter_side]
#           [allied_with]
#              side=$side_number
#           [/allied_with]
#           [/filter_side]
#    #       side=$side_number
#        [/filter]
#    [/and]
    [/target]
    [/tunnel]
[/event]
[+abilities]
    # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_SECONDSTRIKE
    [firststrike]
        id=steppe_secondstrike
        name=_"secondstrike"
        description=_"This unit always strikes second with this attack, even if they are attacking."
        apply_to=opponent
    [/firststrike]
#enddef

#define ABILITY_DAUNTLESS
    [resistance]
        id=steppe_dauntless
        multiply=2
        max_value=50
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=0
            less_than=50
        [/filter_base_value]
        name= _ "dauntless"
        female_name= _ "female^dauntless"
        description= _ "This unitâ€™s resistances are doubled, up to a maximum of 50%, when attacking. Vulnerabilities are not affected."
        special_note={INTERNAL:SPECIAL_NOTES_STEADFAST}
        affect_self=yes
        active_on=offense
    [/resistance]
#enddef


#define WEAPON_SPECIAL_STEPPE_EXPLOSION
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=steppe_explosion
        name=_"explosion"
        description=_"When this attack hits, units adjacent to the target unit are damaged by 50% (rounded down) of this attack's damage."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring
[event]
    name=attacker_hits
    id=steppe_explosion
    first_time_only=no
    [filter_attack]
        special_id=steppe_explosion
    [/filter_attack]

    {VARIABLE tmp_aoedmg $weapon.damage}
    {VARIABLE_OP tmp_aoedmg multiply 0.5}
    {VARIABLE_OP tmp_aoedmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x2,$y2
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$unit.side
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [or]
                    id=$second_unit.id
                [/or]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {FOREACH bystander i}
                [if]
                    [have_unit]
                        find_in=expfreeze
                        x,y=$bystander[$i].x,$bystander[$i].y
                    [/have_unit]
                    [else]
                    [fire_event]
                        name=attack
                        [primary_unit]
                            id=$unit.id
                        [/primary_unit]
                        [secondary_unit]
                            id=$bystander[$i].id
                        [/secondary_unit]
                    [/fire_event]
                    [store_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
                        variable=expfreeze
                        mode=append
                    [/store_unit]
                    [/else]
                [/if]
                [harm_unit]
                    [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                        [filter_side]
                            [enemy_of]
                                side=$unit.side
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x1,$y1
                    [/filter_second]
                    [primary_attack]
                        name=$weapon.name
                        type=$weapon.type
                        range=$weapon.range
                    [/primary_attack]
                    amount=$tmp_aoedmg
                    damage_type=$weapon.type
                    alignment=$unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
                {VARIABLE damage_inflicted $tmp_aoedmg}
                [fire_event]
                    name=attacker_hits
                    [primary_unit]
                        id=$unit.id
                    [/primary_unit]
                    [secondary_unit]
                        id=$bystander[$i].id
                    [/secondary_unit]
                    [primary_weapon]
                        name=$weapon.name
                        type=$weapon.type
                        damage=$weapon.damage
                        range=$weapon.range
                    [/primary_weapon]
                [/fire_event]
    {NEXT i}
    {CLEAR_VARIABLE tmp_aoedmg}
[/event]

[event]
    name=defender_hits
    id=steppe_explosion2
    first_time_only=no
    [filter_second_attack]
        special_id=steppe_explosion
    [/filter_second_attack]

    {VARIABLE tmp_expfreeze_defense yes}#the expfreeze event checks this variable

    {VARIABLE tmp_aoedmg $second_weapon.damage}
    {VARIABLE_OP tmp_aoedmg multiply 0.5}
    {VARIABLE_OP tmp_aoedmg round floor}

    [store_unit]
        [filter]
            [filter_adjacent]
                x,y=$x1,$y1
            [/filter_adjacent]
            [filter_side]
                [enemy_of]
                    side=$second_unit.side
                [/enemy_of]
            [/filter_side]
            [not]
                [filter_wml]
                    [status]
                        petrified=yes
                    [/status]
                [/filter_wml]
                [or]
                    id=$unit.id
                [/or]
            [/not]
        [/filter]
        variable=bystander
    [/store_unit]

    {FOREACH bystander i}
                [if]
                    [have_unit]
                        find_in=expfreeze
                        x,y=$bystander[$i].x,$bystander[$i].y
                    [/have_unit]
                    [else]
                    [fire_event]
                        name=attack
                        [primary_unit]
                            id=$second_unit.id
                        [/primary_unit]
                        [secondary_unit]
                            id=$bystander[$i].id
                        [/secondary_unit]
                    [/fire_event]
                    [store_unit]
                        [filter]
                            x,y=$bystander[$i].x,$bystander[$i].y
                        [/filter]
                        variable=expfreeze
                        mode=append
                    [/store_unit]
                    [/else]
                [/if]
                [harm_unit]
                    [filter]
                        x,y=$bystander[$i].x,$bystander[$i].y
                        [filter_side]
                            [enemy_of]
                                side=$second_unit.side
                            [/enemy_of]
                        [/filter_side]
                        [not]
                            [filter_wml]
                                [status]
                                    petrified=yes
                                [/status]
                            [/filter_wml]
                        [/not]
                    [/filter]
                    [filter_second]
                        x,y=$x2,$y2
                    [/filter_second]
                    [primary_attack]
                        name=$second_weapon.name
                        type=$second_weapon.type
                        range=$second_weapon.range
                    [/primary_attack]
                    amount=$tmp_aoedmg
                    damage_type=$second_weapon.type
                    alignment=$second_unit.alignment
                    fire_event=yes
                    animate=defender
                    delay=0
                    experience=no
                [/harm_unit]
                {VARIABLE damage_inflicted $tmp_aoedmg}
                [fire_event]
                    name=defender_hits
                    [primary_unit]
                        id=$bystander[$i].id
                    [/primary_unit]
                    [secondary_unit]
                        id=$unit.id
                    [/secondary_unit]
                    [primary_weapon]
                        name=$second_weapon.name
                        type=$second_weapon.type
                        damage=$second_weapon.damage
                        range=$second_weapon.range
                    [/primary_weapon]
                [/fire_event]
    {NEXT i}
    {CLEAR_VARIABLE tmp_aoedmg}
[/event]

{STEPPE_EXPFREEZE_EVENT}
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef

#define ABILITY_STEPPE_SHADOW_DASH RADIUS
    [teleport]
        id=steppe_shadow_dash{RADIUS}
        name= _ "shadow dash"+" {RADIUS}"
        description= _ "TODO"
        [tunnel]
            id=steppe_shadow_dash{RADIUS}
            allow_vision=no
            bidirectional=no
            [source]
                [filter]
                    [filter_side]
                        [enemy_of]
                            side=$teleport_unit.side
                        [/enemy_of]
                    [/filter_side]
                [/filter]
                radius={RADIUS}
            [/source]

            [target]
                [filter_adjacent_location]
                    [filter]
                        [filter_side]
                            [enemy_of]
                                side=$teleport_unit.side
                            [/enemy_of]
                        [/filter_side]
                    [/filter]
#                    [and]
#                        [filter]
#                            id=$teleport_unit.id
#                        [/filter]
#                        radius={RADIUS}
#                    [/and]
                [/filter_adjacent_location]
            [/target]

            [filter]
                ability=steppe_shadow_dash{RADIUS}
            [/filter]
        [/tunnel]
    [/teleport]
#enddef

#define WEAPON_SPECIAL_STEPPE_STACKING
# wmlindent: start ignoring
# wmlxgettext: [attack]
# wmlxgettext: [specials]

# wmlindent: stop ignoring
    [damage]
        id=steppe_stacking
        name= _ "stacking"
        description=_"When this attack is used, its damage increases by 1 after each successful hit. After the unit stops attacking, the damage resets to normal."
    [/damage]
[/specials]
# wmlindent: start ignoring
[/attack]
# wmlindent: stop ignoring

[event]
    name=attack
    id=steppe_stacking_event1
    first_time_only=no
    [filter_attack]
        special_id=steppe_stacking
    [/filter_attack]

    {VARIABLE tmp_stacking_dmgbonus 0}
[/event]

[event]
    name=attacker_hits
    first_time_only=no
    id=steppe_stacking_event2
    [filter_attack]
        special_id=steppe_stacking
    [/filter_attack]

    {VARIABLE_OP tmp_stacking_dmgbonus add 1}

    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=steppe_stacking
            increase_damage=1
        [/effect]
    [/object]
[/event]

[event]
    name=attack end
    id=steppe_stacking_event3
    first_time_only=no
    [filter_attack]
        special_id=steppe_stacking
    [/filter_attack]

#reset the damage
    [object]
        silent=yes
        duration=turn end
        [filter]
            find_in=unit
        [/filter]
        [effect]
            apply_to=attack
            special_id=steppe_stacking
            increase_damage=-$tmp_stacking_dmgbonus
        [/effect]
    [/object]
    {CLEAR_VARIABLE tmp_stacking_dmgbonus}
[/event]

#[event]
#    name=attack
#    id=eoma_growingfury{ARRAY}{ADD}_event4
#    first_time_only=no
#    [filter_second_attack]
#        special_id=eoma_growingfury{ARRAY}{ADD}
#    [/filter_second_attack]
#
#    [store_unit]
#        [filter]
#            x,y=$x2,$y2
#        [/filter]
#        variable=dmgmemo2
#    [/store_unit]
#    {VARIABLE growingfury2_counter 1}
#[/event]
#
#[event]
#    name=defender_hits
#    first_time_only=no
#    id=eoma_growingfury{ARRAY}{ADD}_event5
#    [filter_second_attack]
#        special_id=eoma_growingfury{ARRAY}{ADD}
#    [/filter_second_attack]
#
#    [if]
#        {VARIABLE_CONDITIONAL growingfury2_counter not_equals 3}
#        [then]
#            {VARIABLE_OP unit.attack[{ARRAY}].damage add {ADD}}{VARIABLE_OP second_unit.attack[{ARRAY}].damage add {ADD}}
#            {VARIABLE_OP growingfury2_counter add 1}
#        [/then]
#    [/if]
#    [unstore_unit]
#        variable=second_unit
#    [/unstore_unit]
#[/event]
#
#[event]
#    name=attack end
#    id=eoma_growingfury{ARRAY}{ADD}_event6
#    first_time_only=no
#    [filter_second_attack]
#        special_id=eoma_growingfury{ARRAY}{ADD}
#    [/filter_second_attack]
#
#    [set_variable]
#        name=second_unit.attack[{ARRAY}].damage
#        value=$dmgmemo2.attack[{ARRAY}].damage
#    [/set_variable]
#    [unstore_unit]
#        variable=second_unit
#    [/unstore_unit]
#    {CLEAR_VARIABLE dmgmemo2}
#    {CLEAR_VARIABLE growingfury2_counter}
#[/event]
[+attack]
# wmlindent: start ignoring

[+specials]
# wmlxgettext: [/specials]
# wmlxgettext: [/attack]
# wmlindent: stop ignoring
#enddef


#define EVENTLOADER_EVENTS_MANDATE
#enddef