#textdomain wesnoth-gse

#define MAINLINE_PORTRAIT FOLDER IMAGE
#ifver WESNOTH_VERSION >= 1.14.0
#    small_profile="portraits/{FOLDER}/{IMAGE}.png~SCALE(205,205)"
    profile="portraits/{FOLDER}/{IMAGE}.png"
#else
#    small_profile="portraits/{FOLDER}/transparent/{IMAGE}.png~SCALE(205,205)"
    profile="portraits/{FOLDER}/transparent/{IMAGE}.png"
    [portrait]
        size=400
        side="left"
        mirror="false"
        image="portraits/{FOLDER}/transparent/{IMAGE}.png"
    [/portrait]
    [portrait]
        size=400
        side="right"
        mirror="true"
        image="portraits/{FOLDER}/transparent/{IMAGE}.png"
    [/portrait]
#endif    
#enddef

#define STEPPE_LUA_CALCULATE_UNIT_SPRITE_SIZE UNITVAR RETURN_VAR_WIDTH RETURN_VAR_HEIGHT
    [store_unit]
        [filter]
            id=${UNITVAR}.id
        [/filter]
        variable=steppe_lua_spritecalc
        kill=no
    [/store_unit]

    [lua]
        [args]
            unitvar={UNITVAR}
            returnvar_width_width={RETURN_VAR_WIDTH}
            returnvar_width_height={RETURN_VAR_HEIGHT}
        [/args]
        code=<<
            local t = ...
            local imgunit = wesnoth.get_variable("steppe_lua_spritecalc.id")
            local imgunit_img = wesnoth.get_variable("steppe_lua_spritecalc.image")
            local w, h = wesnoth.get_image_size(imgunit_img)
            wesnoth.set_variable("debug_unitid", imgunit)            
            wesnoth.set_variable((t.returnvar_width_width), w)
            wesnoth.set_variable((t.returnvar_width_height), h)
        >>
    [/lua]

    {CLEAR_VARIABLE steppe_lua_spritecalc}
#enddef

#define SOUND_LIST:BULL_HIT
bull-hit-[1~3].ogg #enddef

#define SOUND_LIST:HOLY_OGRE
magic-holy-ogre-[1~4].ogg #enddef

#define SOUND_LIST:HOLY_OGRE_MISS
magic-holy-ogre-miss-[1~4].ogg #enddef

#define STEPPE_TOD_ILLUMINATED
    [time]
        id=steppe_illuminated
        name= _ "Illuminated"
        image="misc/time-schedules/schedule-underground-illum.png~BLIT(misc/tod-bright.png)"#image copied from mainline into GSe folder
        lawful_bonus=25
    [/time]
#enddef

#define STEPPE_TOD_DARKENED
    [time]
        id=steppe_darkened
        name= _ "Darkened"
        image="misc/time-schedules/schedule-underground.png~BLIT(misc/tod-dark.png)"
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef

##define GSE_SMOOTH_REPLACE_MUSIC NEW_TRACK FADE_OUT_TIME FADE_IN_TIME
#    [lua]
#        code=<<
#    wesnoth.require "~add-ons/1The_Great_Steppe_Era/lua/steppe_lua_functions.lua"
#
#    local arg = ... -- the ... is used to pass parameters from the [args] tag
#
#    GSE_smooth_replace_music(arg.track,arg.fade_out_time,arg.fade_in_time)
#    >>
#        [args]
#            track={NEW_TRACK}
#            fade_out_time={FADE_OUT_TIME}
#            fade_in_time={FADE_IN_TIME}
#        [/args]
#    [/lua]
##enddef

#define GSE_SMOOTH_REPLACE_MUSIC NEW_TRACK FADE_OUT_TIME FADE_IN_TIME

{VARIABLE tmp_smooth_volume 100}
{VARIABLE tmp_smooth_delay_time "$({FADE_OUT_TIME} / 10)"}

{REPEAT 10 (
{VARIABLE_OP tmp_smooth_volume sub 10}
[volume]
    music=$tmp_smooth_volume
[/volume]
[delay]
    time=$tmp_smooth_delay_time
[/delay]
)}

[volume]
    music=0
[/volume]

{REPLACE_SCENARIO_MUSIC {NEW_TRACK}}

{VARIABLE tmp_smooth_delay_time "$({FADE_IN_TIME} / 10)"}

{REPEAT 10 (
{VARIABLE_OP tmp_smooth_volume add 10}
[volume]
    music=$tmp_smooth_volume
[/volume]
[delay]
    time=$tmp_smooth_delay_time
[/delay]
)}

[volume]
    music=100
[/volume]

#enddef