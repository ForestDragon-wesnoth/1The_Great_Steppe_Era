#textdomain wesnoth-gse

#define GREATSTEPPE_OPTIONS
    [options]
        [checkbox]
            id=steppe_disable_oversight_halos
            default=no
            name="Disable oversight halos"
            description="Units with oversight/khagan's presence abilities will no longer have halos to show the radius of the abilities"
        [/checkbox]
        [checkbox]
            id=steppe_disable_demon_halos
            default=no
            name="Disable demon halos"
            description="Demons will no longer have halos to show the radius they can reproduce with witches."
        [/checkbox]
        [checkbox]
            id=steppe_enable_faction_flags
            default=no
            name="Enable faction-themed flags"
            description="If this is not enabled, each faction has their own village flag type. Recommend to enable this option this for tournaments/other serious PvP matches, as the flags give away a player's faction."
        [/checkbox]
        [checkbox]
            id=steppe_disable_ai
            default=no
            name="Disable all Custom AI"
            description="Disables all of steppe's custom AI features (use this if you experience OOS or other severe bugs with AI sides in multiplayer)"
        [/checkbox]
    [/options]
#enddef

#define STEPPE_NERF_PVP_LEADERS
#enddef

#define STEPPE_RANDOM_SIDE_BALANCED
    [multiplayer_side]
        id=steppe_Random_balanced
        name= _"Balanced Random"
        image="units/random-dice.png"
        random_faction=yes
        choices=ogres,khaganate,hunns,slavs#TODO: when adding fifth/later factions, don't add them here until proper testing
    [/multiplayer_side]
#enddef

#TODO: add ogre kingdom

#define STEPPE_RANDOM_SIDE_GSE
    [multiplayer_side]
        id=steppe_Random_gse
        name= _"Random GSE"
        image="units/random-dice.png"
        random_faction=yes
        choices=ogres,khaganate,hunns,slavs,mandate,kingdom
    [/multiplayer_side]
#enddef

#define STEPPE_RANDOM_SIDE_GSE_AOH
    [multiplayer_side]
        id=steppe_Random_gse
        name= _"Random GSE"
        image="units/random-dice.png"
        random_faction=yes
        choices=ogres_aoh,khaganate_aoh,hunns_aoh,slavs_aoh,mandate_aoh,kingdom_aoh
    [/multiplayer_side]
#enddef

#define STEPPE_RANDOM_SIDE_GSE_RPG
    [multiplayer_side]
        id=steppe_Random_gse
        name= _"Random GSE"
        image="units/random-dice.png"
        random_faction=yes
        choices=ogres_rpg,khaganate_rpg,hunns_rpg,slavs_rpg,mandate_rpg,kingdom_rpg
    [/multiplayer_side]
#enddef

#define STEPPE_RANDOM_SIDE_DEFAULT
    [multiplayer_side]
        id=steppe_Random_default
        name= _"Random Default"
        image="units/random-dice.png"
        random_faction=yes
        choices=Drakes,Loyalists,Rebels,Undead,Northerners,Knalgan Alliance,Dunefolk
    [/multiplayer_side]
#enddef

#define MAINLINE_PORTRAIT FOLDER IMAGE
#ifver WESNOTH_VERSION >= 1.14.0
#    small_profile="portraits/{FOLDER}/{IMAGE}.png~SCALE(205,205)"
    profile="portraits/{FOLDER}/{IMAGE}.png"
#else
#    small_profile="portraits/{FOLDER}/transparent/{IMAGE}.png~SCALE(205,205)"
    profile="portraits/{FOLDER}/transparent/{IMAGE}.png"
    [portrait]
        size=400
        side="left"
        mirror="false"
        image="portraits/{FOLDER}/transparent/{IMAGE}.png"
    [/portrait]
    [portrait]
        size=400
        side="right"
        mirror="true"
        image="portraits/{FOLDER}/transparent/{IMAGE}.png"
    [/portrait]
#endif    
#enddef

#define STEPPE_LUA_CALCULATE_UNIT_SPRITE_SIZE UNITVAR RETURN_VAR_WIDTH RETURN_VAR_HEIGHT
    [store_unit]
        [filter]
            id=${UNITVAR}.id
        [/filter]
        variable=steppe_lua_spritecalc
        kill=no
    [/store_unit]

    [lua]
        [args]
            unitvar={UNITVAR}
            returnvar_width_width={RETURN_VAR_WIDTH}
            returnvar_width_height={RETURN_VAR_HEIGHT}
        [/args]
        code=<<
            local t = ...
            local imgunit = wml.variables["steppe_lua_spritecalc.id"]
            local imgunit_img = wml.variables["steppe_lua_spritecalc.image"]
            local w, h = filesystem.image_size(imgunit_img)
            wml.variables["debug_unitid"] = imgunit
            wml.variables[t.returnvar_width_width] = w
            wml.variables[t.returnvar_width_height] = h
        >>
    [/lua]

    {CLEAR_VARIABLE steppe_lua_spritecalc}
#enddef

#define SOUND_LIST:BULL_HIT
bull-hit-[1~3].ogg #enddef

#define SOUND_LIST:HOLY_OGRE
magic-holy-ogre-[1~4].ogg #enddef

#define SOUND_LIST:HOLY_OGRE_MISS
magic-holy-ogre-miss-[1~4].ogg #enddef

#define STEPPE_TOD_ILLUMINATED
    [time]
        id=steppe_illuminated
        name= _ "Illuminated"
        image="misc/time-schedules/schedule-underground-illum.png~BLIT(misc/tod-bright.png)"#image copied from mainline into GSe folder
        lawful_bonus=25
    [/time]
#enddef

#define STEPPE_TOD_DARKENED
    [time]
        id=steppe_darkened
        name= _ "Darkened"
        image="misc/time-schedules/schedule-underground.png~BLIT(misc/tod-dark.png)"
        lawful_bonus=-25
        red=-75
        green=-45
        blue=-13
    [/time]
#enddef

#define GSE_SMOOTH_REPLACE_MUSIC NEW_TRACK FADE_OUT_TIME FADE_IN_TIME

{VARIABLE tmp_smooth_volume 100}
{VARIABLE tmp_smooth_delay_time "$({FADE_OUT_TIME} / 10)"}

{REPEAT 10 (
{VARIABLE_OP tmp_smooth_volume sub 10}
[volume]
    music=$tmp_smooth_volume
[/volume]
[delay]
    time=$tmp_smooth_delay_time
[/delay]
)}

[volume]
    music=0
[/volume]

{REPLACE_SCENARIO_MUSIC {NEW_TRACK}}

{VARIABLE tmp_smooth_delay_time "$({FADE_IN_TIME} / 10)"}

{REPEAT 10 (
{VARIABLE_OP tmp_smooth_volume add 10}
[volume]
    music=$tmp_smooth_volume
[/volume]
[delay]
    time=$tmp_smooth_delay_time
[/delay]
)}

[volume]
    music=100
[/volume]

{CLEAR_VARIABLE tmp_smooth_volume}
{CLEAR_VARIABLE tmp_smooth_delay_time}
#enddef

#used by the Bard unit:

#define GSE_SMOOTH_INCIDENTAL_MUSIC NEW_TRACK FADE_OUT_TIME FADE_IN_TIME

{VARIABLE tmp_smooth_volume 100}
{VARIABLE tmp_smooth_delay_time "$({FADE_OUT_TIME} / 10)"}

{REPEAT 10 (
{VARIABLE_OP tmp_smooth_volume sub 10}
[volume]
    music=$tmp_smooth_volume
[/volume]
[delay]
    time=$tmp_smooth_delay_time
[/delay]
)}

[volume]
    music=0
[/volume]

{INCIDENTAL_MUSIC {NEW_TRACK}}

{VARIABLE tmp_smooth_delay_time "$({FADE_IN_TIME} / 10)"}

{REPEAT 10 (
{VARIABLE_OP tmp_smooth_volume add 10}
[volume]
    music=$tmp_smooth_volume
[/volume]
[delay]
    time=$tmp_smooth_delay_time
[/delay]
)}

[volume]
    music=100
[/volume]

{CLEAR_VARIABLE tmp_smooth_volume}
{CLEAR_VARIABLE tmp_smooth_delay_time}
#enddef

#define STEPPE_EXECUTE_IF_SYNCED CODE
[lua]
    code=<<
--    wesnoth.message("current sync state "..wesnoth.current.synced_state)
    wml.variables["tmp_syncedcheck_issynced"] = wesnoth.current.synced_state
    >>
[/lua]
[if]
{VARIABLE_CONDITIONAL tmp_syncedcheck_issynced equals synced}
[then]
{CODE}
[/then]
[/if]
{CLEAR_VARIABLE tmp_syncedcheck_issynced}
#enddef

#using this copied macro to make switching to 1.18 less of a hassle (I can slowly start replacing the macros after porting). TODO: eventually replace all instances of these macros in the era with proper foreach/while loop tags

#define GSE_DEPRECATED_MACRO_FOREACH ARRAY_VALUE VAR
{VARIABLE {VAR} 0}
[while]
    [variable]
    name={VAR}
    less_than=${ARRAY_VALUE}.length
    [/variable]
    [do]
#enddef

#define GSE_DEPRECATED_MACRO_NEXT VAR
    [set_variable]
    name={VAR}
    add=1
    [/set_variable]
    [/do]
[/while]
{CLEAR_VARIABLE {VAR}}
#enddef

#define FIND_MATCHING_ATTACK_SLOT WEAPONVAR UNITVAR OUTPUTVAR
[foreach]
    array={UNITVAR}.attack
    index_var=i
    [do]
#        [chat]
#            message=$i
#        [/chat]
        [if]
            {VARIABLE_CONDITIONAL this_item.damage equals ${WEAPONVAR}.damage}
            [and]
                {VARIABLE_CONDITIONAL this_item.number equals ${WEAPONVAR}.number}
            [/and]
            [and]
                {VARIABLE_CONDITIONAL this_item.icon equals ${WEAPONVAR}.icon}
            [/and]
            [and]
                {VARIABLE_CONDITIONAL this_item.type equals ${WEAPONVAR}.type}
            [/and]
            [and]
                {VARIABLE_CONDITIONAL this_item.name equals ${WEAPONVAR}.name}
            [/and]
            [and]
                {VARIABLE_CONDITIONAL this_item.description equals ${WEAPONVAR}.description}
            [/and]
            [and]
                {VARIABLE_CONDITIONAL this_item.specials equals ${WEAPONVAR}.specials}#seems to work
            [/and]
            [then]
#                [chat]
#                    message="matching attack index: $i"
#                [/chat]
                {VARIABLE {OUTPUTVAR} $i}
            [/then]
        [/if]
    [/do]
[/foreach]
#enddef
