#textdomain wesnoth-gse

#experimental abilities/abilities planned for future factions

#NOTE: do not use $ at the start of formulas

#define WEAPON_SPECIAL_DESPERATE_UNUSED
#failed formula-based attempt at the desperate ability
#TODO: move this to the unused code file
    [damage]
        id=desperate
        name=_"desperate"
        description= _ "This attack more damage the less hp the unit has, up to double damage."
        multiply="(1.0 + (0.0 + $self.hitpoints / $self.max_hitpoints))"
    [/damage]
#enddef

#define ABILITY_FAMILIAR
    [teleport]
        id=familiar
        name= _ "familiar"
        female_name= _ "female^familiar"
        description= _ "This unit may teleport to allied units."
        [tunnel]
            id=familiar
            [source]
                terrain=*
            [/source]
            [filter]
                ability=familiar
            [/filter]
            [target]
                [filter_adjacent_location]
                    [filter]
                        side=$teleport_unit.side
                    [/filter]       
                [/filter_adjacent_location]                      
            [/target]
        [/tunnel]
    [/teleport]
#enddef

#define WEAPON_SPECIAL_SECONDSTRIKE
    [firststrike]
        id=steppe_secondstrike
        name=_"desperate"
        description=_"This unit always strikes second with this attack, even if they are attacking."
        apply_to=opponent
    [/firststrike]
#enddef



#define WEAPON_SPECIAL_RIGHTEOUS
#might be useful for the slav faction later on
    [damage]
        id=steppe_righteous
        name=_"righteous"
        description= _ "This attack deals 25% more damage against chaotic enemies."
        multiply=1.25
        [filter_opponent]
        [filter_wml]
            alignment=chaotic
        [/filter_wml]
        [/filter_opponent]
    [/damage]
#enddef

#weapon special idea: a [disable] that applies to other, making a proper no-counter attack

#tested this, works flawlessly on 1.16:

#define ABILITY_POISON_AURA
    [poison]
        id=poison_aura
        name=_"poison aura"
        description=_"Adjacent allies have poison on all their attacks."
        affect_self=no
        affect_allies=yes
        [affect_adjacent]
#            [filter]
#                formula="level < other.level"
#            [/filter]
        [/affect_adjacent]
    [/poison]
#enddef

#TODO: make maybe some kind of weird faction in another add-on with abilities below (like "namraepS", a reverse spearman (stats same as spearman but has inverse weapon special (as well as inverse resistances ability on one of the advancement paths))): 

#define WEAPON_SPECIAL_INVERSE
[chance_to_hit]
    id=steppe_inverse
    name= _ "inverse"
    description= _ "This attack's chance to hit is equal to the defensive ability of the target on its current terrain. (opposite of the normal chance to hit)"
    add=-100
    multiply=-1
    cumulative=no
[/chance_to_hit]
#enddef

#TODO: fix this stacking with inverse
#define ABILITY_INVERSION_AURA
[chance_to_hit]
    id=steppe_inversion_aura
    name= _ "inversion aura"
    description= _ "Adjacent units' chance to hit is equal to the defensive ability of the target on its current terrain (opposite of the normal chance to hit). Attacks with the 'inverse' weapon special are unaffected."
    add=-100
    multiply=-1
    cumulative=no
    affect_self=no
    affect_allies=yes
    affect_enemies=yes
    [filter_weapon]
        [not]
            special_id=steppe_inverse
        [/not]
    [/filter_weapon]
    [affect_adjacent]
        adjacent=n,ne,se,s,sw,nw
    [/affect_adjacent]
[/chance_to_hit]
#enddef

#define ABILITY_INVERT_RESISTANCES
    # Canned definition of the Steadfast ability to be included in an [abilities]
    # clause.
    [resistance]
        id=steppe_invert_resistances
        multiply=-1
        max_value=100
        # applies to any type if we leave it out
        #apply_to=blade,pierce,impact,fire,cold,arcane
#        [filter_base_value]
#            greater_than=0
#            less_than=50
#        [/filter_base_value]
        name= _ "invert resistances"
        description= _ "Adjacent units (both allies and enemies) resistances are inverted (20% becomes -20%, -30% becomes 30%, etc.)"
        affect_self=no
        affect_allies=yes
        affect_enemies=yes
        active_on=defense
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
        [/affect_adjacent]
    [/resistance]
#enddef

#define WEAPON_SPECIAL_SQUARE_ROOT
#using hacky workaround with attacker/defender, as other doesn't seem to work properly with weapon specials
[damage]
    id=square_root
    name= _ "square root"
    description= _ "This attack deals bonus damage equal to the square root of the enemy's max hitpoints."
    add="(round(sqrt(defender.max_hitpoints)))"
    apply_to=self
    active_on=offense
[/damage]
[damage]
    id=square_root2
    add="(round(sqrt(attacker.max_hitpoints)))"
    apply_to=self
    apply_to=defense
[/damage]
#enddef

#define WEAPON_SPECIAL_HALVING
[damage]
    id=halving
    name= _ "halving"
    description= _ "This attack deals bonus damage equal to half of the enemy's current hitpoints."
    add="(defender.hitpoints / 2)"
    apply_to=self
    active_on=offense
[/damage]
[damage]
    id=halving2
    add="(attacker.hitpoints / 2)"
    apply_to=self
    active_on=defense
[/damage]
#enddef