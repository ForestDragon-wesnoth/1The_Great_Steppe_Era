#textdomain wesnoth-gse

#define STEPPE_FREEUNIT PENIS PIZDA
#enddef

#define ABILITY_OGREFACTION
	[dummy]
		id=ogrefaction
	[/dummy]
#enddef

#define ABILITY_STEPPE_BLOOD_UPKEEP
	[dummy]
		id=steppe_blood_upkeep
		name=_"blood tribute"
		description=_"Instead of gold, this unit spends its own hitpoints to upkeep themselves."
	[/dummy]
[/abilities]
upkeep=0
[event]
	name=side turn 
	first_time_only=no 
	id=steppe_blood_upkeep_event 

		[store_unit]
			[filter]
				side=$side_number 
				ability=steppe_blood_upkeep 
			[/filter]
			variable=blood_upkeep_units 
			kill=no 
		[/store_unit]

		[foreach]
			array=blood_upkeep_units
			index_var=i 

			[do]
				[harm_unit]
					[filter]
						find_in=this_item 
					[/filter]
					amount=$this_item.level 
					kill=no 
					animate=no
				[/harm_unit]
			[/do]
		[/foreach]

		{CLEAR_VARIABLE blood_upkeep_units}
	[/event]
[+abilities] 
#enddef

#define ABILITY_OGRE_BODYGUARD
	[resistance]
		id=steppe_ogre_bodyguard
		add=10
		max_value=30
		apply_to=blade,pierce,impact,fire,cold,arcane
		name=_"bodyguard"
		description=_"If standing next to either a Ogre Mancatcher, Ogre Slaver Apprentice or Ogre Slaver, this unit deals 20% more damage, and the other units(s) gain a 10% bonus to all resistances (up to 30%."
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			adjacent=n,ne,se,s,sw,nw
		[filter]
			ability=steppe_ogre_bodyguarded
		[/filter]
		[/affect_adjacent]
		[filter_base_value]
			less_than=30
		[/filter_base_value]
	[/resistance]
#enddef

#define ABILITY_OGRE_BODYGUARDED
	[leadership]
		id=steppe_ogre_bodyguarded
		value=20
		cumulative=no
		affect_self=no
		affect_allies=yes
		[affect_adjacent]
			[filter]
				ability=steppe_ogre_bodyguard
			[/filter]
		[/affect_adjacent]
	[/leadership]
#enddef

#define ABILITY_THUNDERSTRIKE NUMBER
	[dummy]
		id=thunderstrike{NUMBER}
		name=_"thunderstrike "+{NUMBER}
		description=_"Each turn, this unit attacks a random adjacent enemy with lightning, dealing "+{NUMBER}+_" fire damage. Does not damage units in cages."
	[/dummy]
[/abilities]

[event]
	name=side turn
	id=steppe_thunderstrike{NUMBER}
	first_time_only=no
	[store_unit]
		[filter]
			side=$side_number
			ability=thunderstrike{NUMBER}
		[not]
			[filter_wml]
				[status]
					petrified=yes
				[/status]
		[/filter_wml]
		[/not]
		[/filter]
		variable=thundershaman
		kill=no
	[/store_unit]
	[if]
	[variable]
		name=thundershaman.length
		greater_than=0
	[/variable]
	[then]
	{GSE_DEPRECATED_MACRO_FOREACH thundershaman e}
	[store_unit]
		[filter]
			[filter_adjacent]
				x,y=$thundershaman[$e].x,$thundershaman[$e].y
			[/filter_adjacent]
			[filter_side]
				[enemy_of]
					side=$side_number
				[/enemy_of]
			[/filter_side]
			[not]
			[filter_wml]
			[status]
				petrified=yes
			[/status]
			[/filter_wml]
			[or]
				ability=steppe_captured
			[/or]
			[/not]
		[/filter]
		variable=thundertarget
		kill=no
	[/store_unit]
	[if]
	[variable]
		name=thundertarget.length
		greater_than=0
	[/variable]
	[then]
	{VARIABLE thundertarget_random_limit $thundertarget.length}
	{VARIABLE_OP thundertarget_random_limit sub 1}
	{RANDOM 0..$thundertarget_random_limit}

	[animate_unit]
		flag=attack
		[filter]
			id=$thundershaman[$e].id
		[/filter]
		[filter_second]
			id=$thundertarget[$random].id
		[/filter_second]
		[primary_attack]
			name=lightning
		[/primary_attack]
		[facing]
			x,y=$thundertarget[$random].x,$thundertarget[$random].y
		[/facing]
		hits=yes
	[/animate_unit]

	[harm_unit]
		[filter]
			id=$thundertarget[$random].id
		[/filter]
		[filter_second]
			id=$thundershaman[$e].id
		[/filter_second]
		amount={NUMBER}
		damage_type=fire
		experience=yes
		fire_event=yes
		animate=yes
	[/harm_unit] 
	[/then]
	[/if]
	{GSE_DEPRECATED_MACRO_NEXT e}
	{CLEAR_VARIABLE thundershaman}
	{CLEAR_VARIABLE thundertarget}
	{CLEAR_VARIABLE thundertarget_random_limit}
	[/then]
	[/if]
	[/event]

[+abilities] 
#enddef

#define ABILITY_LIFESTEAL_AURA NUMBER
	[dummy]
		id=lifesteal_aura{NUMBER}
		name=_"lifesteal aura "+{NUMBER}
		description=_"Each turn, this unit deals "+{NUMBER}+" damage to adjacent living enemies, and heals self by "+{NUMBER}+_" HP for each enemy damaged. Like poison, this can't kill."
	[/dummy]

	# wmlxgettext: [abilities]
[/abilities]
	[event]
	name=side turn
	id=steppe_lifesteal_aura{NUMBER}
	first_time_only=no
	[store_unit]
		[filter]
			side=$side_number
			ability=lifesteal_aura{NUMBER}
		[not]
		[filter_wml]
		[status]
			petrified=yes
		[/status]
		[/filter_wml]
		[/not]
		[/filter]
		variable=lifestealer
		kill=no
	[/store_unit]
	[if]
	[variable]
		name=lifestealer.length
		greater_than=0
	[/variable]
	[then]
	{GSE_DEPRECATED_MACRO_FOREACH lifestealer e}
	[store_unit]
		[filter]
			[filter_adjacent]
				x,y=$lifestealer[$e].x,$lifestealer[$e].y
			[/filter_adjacent]
			[filter_side]
				[enemy_of]
					side=$side_number
				[/enemy_of]
			[/filter_side]
			[not]
			[filter_wml]
			[status]
				petrified=yes
			[/status]
			[or]
			[status]
				undrainable=yes
			[/status]
			[/or]
			[/filter_wml]
			[/not]
		[/filter]
		variable=lifesteal_target
		kill=no
	[/store_unit]

	{VARIABLE tmp_lifesteal_heal 0}

	[if]
	[variable]
		name=lifesteal_target.length
		greater_than=0
	[/variable]
	[then]
	{FOREACH lifesteal_target l}

	[animate_unit]
		flag=drain_anim
		[filter]
			id=$lifestealer[$e].id
		[/filter]
		[facing]
			x,y=$lifesteal_target[$l].x,$lifesteal_target[$l].y
		[/facing]
		hits=yes
	[/animate_unit]

	[harm_unit]
		[filter]
			id=$lifesteal_target[$l].id
		[/filter]
		[filter_second]
			id=$lifestealer[$e].id
		[/filter_second]
		amount={NUMBER}
		experience=yes
		fire_event=yes
		animate=yes
		experience=no
		kill=no
	[/harm_unit]
	{VARIABLE_OP tmp_lifesteal_heal add {NUMBER}}

	{GSE_DEPRECATED_MACRO_NEXT l}
	[/then]
	[/if]

		[heal_unit]
			[filter]
				id=$lifestealer[$e].id
			[/filter]
			amount=$tmp_lifesteal_heal
			animate=yes
			restore_statuses=no
		[/heal_unit]

	{GSE_DEPRECATED_MACRO_NEXT e}
	{CLEAR_VARIABLE lifestealer}
	{CLEAR_VARIABLE lifesteal_target}
	{CLEAR_VARIABLE tmp_lifesteal_heal}
	[/then]
	[/if]
	[/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define WEAPON_SPECIAL_STEPPE_SLAVE_TRADE
	[dummy]
		id=steppe_slave_trade
		name=_"slave trade"
		description=_""
	[/dummy]
	[/specials]
[/attack]

[event]
name=last breath 
first_time_only=no 

	[filter]
		[not]
			ability=steppe_building
		[/not]
	[/filter]
   
	[filter_second_attack]
		special_id=steppe_slave_trade
	[/filter_second_attack]

	[store_unit]
		[filter]
			find_in=unit 
		[/filter]
		kill=no
		variable=slave 
	[/store_unit]

	[set_variables]
		name=cages 
		mode=append 
		[insert_tag]
			name=value 
			variable=slave 
		[/insert_tag]
	[/set_variables]

	[kill]
		x,y=$unit.x,$unit.y 
		fire_event=no 
		animate=no 
	[/kill]

	{CLEAR_VARIABLE slave}

	{UNIT $second_unit.side Cage $unit.x $unit.y ()}
	[return][/return]
[/event]
[event]
name=last breath
first_time_only=no 

	[filter]
		type=Cage 
	[/filter]

	[for]
		array=cages 
		index_var=i 
		[do] 
			[if]
				[variable]
					name=cages[$i].x 
					equals=$unit.x 
				[/variable]
			[and]
				[variable]
					name=cages[$i].y
					equals=$unit.y 
				[/variable]
			[/and]
			[then]

				{VARIABLE cages[$i].hitpoints $cages[$i].max_hitpoints}
				{VARIABLE_OP cages[$i].hitpoints multiply 0.33}
				{VARIABLE_OP cages[$i].hitpoints round ceil}

				[unstore_unit]
					variable=cages[$i] 
					find_vacant=no 
					x,y=$unit.x,$unit.y
				[/unstore_unit]

				{CLEAR_VARIABLE cages[$i]}
				[break][/break]
			[/then]
			[/if]
		[/do]
	[/for]
[/event]
[+attack]
[+specials]
#enddef

#define STEPPE_DEFENSE_MPCOST_CHANGE VALUE MPCOST
					[effect]
						apply_to=defense
			replace=no
			  [defense]
			deep_water={VALUE}
				shallow_water={VALUE}
				swamp_water={VALUE}
				reef={VALUE}
				flat={VALUE}
				sand={VALUE}
				forest={VALUE}
				hills={VALUE}
				mountains={VALUE}
				village={VALUE}
				castle={VALUE}
				cave={VALUE}
				frozen={VALUE}
#               unwalkable={VALUE}
				fungus={VALUE}
			  [/defense]
					[/effect]
					[effect]
						apply_to=movement_costs
			replace=no
			  [movement_costs]
			deep_water={MPCOST}
				shallow_water={MPCOST}
				swamp_water={MPCOST}
				reef={MPCOST}
				flat={MPCOST}
				sand={MPCOST}
				forest={MPCOST}
				hills={MPCOST}
				mountains={MPCOST}
				village={MPCOST}
				castle={MPCOST}
				cave={MPCOST}
				frozen={MPCOST}
				unwalkable={MPCOST}
				fungus={MPCOST}
			  [/movement_costs]
					[/effect]
#enddef
